{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/pages/SelectedRooms.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useBookingContext } from '../components/ContexApplication';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectedRooms = ({\n  data,\n  onNext,\n  onPrevious\n}) => {\n  _s();\n  const {\n    getGuestInfo,\n    setBookingData,\n    bookingData\n  } = useBookingContext();\n  const StatGuestFormatted = getGuestInfo(\"stat\");\n  const totalGuest = getGuestInfo('sum');\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const [availableRooms, setAvailableRooms] = useState([]);\n  console.log(bookingData);\n  useEffect(() => {\n    const filteredRooms = data.filter(room => !room.booked);\n    setAvailableRooms(filteredRooms);\n  }, [data]);\n  const handleRoomSelection = room => {\n    const isSelected = selectedRooms.some(selectedRoom => selectedRoom.id === room.id);\n    if (isSelected) {\n      const updatedRooms = selectedRooms.filter(selectedRoom => selectedRoom.id !== room.id);\n      setSelectedRooms(updatedRooms);\n    } else {\n      const totalGuestSelected = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n      const newTotalGuest = totalGuestSelected + room.maxGuest;\n      if (newTotalGuest <= totalGuest) {\n        setSelectedRooms([...selectedRooms, room]);\n      } else {\n        alert('Cannot select more rooms than the total number of guests.');\n      }\n    }\n  };\n  const handleNext = () => {\n    const totalSelectedGuests = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n    if (totalSelectedGuests >= totalGuest) {\n      onNext();\n      setBookingData(prev => ({\n        ...prev,\n        roomSelected: [...(prev.roomSelected || []), ...selectedRooms]\n      }));\n    } else {\n      alert('You must select enough rooms to accommodate all guests.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SelectedRoomsConteiner\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SelectedRooms flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TitleHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onPrevious,\n          className: \"PreviousBotton\",\n          children: \"Prevuis Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Select Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" Total Guest Selected  \", totalGuest]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          readOnly: true,\n          value: StatGuestFormatted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), availableRooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SelectedRoomsItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SelectedImage\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: room.src,\n            alt: room.category,\n            style: {\n              minWidth: \"40rem\",\n              height: \"20rem\",\n              objectFit: \"cover\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SelectedRoomsDescription\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: room.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", room.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", room.price, \"$\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Max Guests: \", room.maxGuest]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRoomSelection(room),\n            className: \"RoomSelectorBotton\",\n            children: selectedRooms.some(selectedRoom => selectedRoom.id === room.id) ? 'Deselect' : 'Select'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, room.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BottonNext\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectedRooms, \"F6iB0L5jegIbfZOtq59ET0LYetA=\", false, function () {\n  return [useBookingContext];\n});\n_c = SelectedRooms;\nvar _c;\n$RefreshReg$(_c, \"SelectedRooms\");","map":{"version":3,"names":["React","useEffect","useState","useBookingContext","jsxDEV","_jsxDEV","SelectedRooms","data","onNext","onPrevious","_s","getGuestInfo","setBookingData","bookingData","StatGuestFormatted","totalGuest","selectedRooms","setSelectedRooms","availableRooms","setAvailableRooms","console","log","filteredRooms","filter","room","booked","handleRoomSelection","isSelected","some","selectedRoom","id","updatedRooms","totalGuestSelected","reduce","total","maxGuest","newTotalGuest","alert","handleNext","totalSelectedGuests","prev","roomSelected","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","type","readOnly","value","map","src","alt","category","minWidth","height","objectFit","description","price","_c","$RefreshReg$"],"sources":["/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/pages/SelectedRooms.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Data } from '../interfaces/Data';\nimport { useBookingContext } from '../components/ContexApplication';\ninterface SelectedRoomsProps {\n    data: Data[];\n    onNext: () => void;\n    onPrevious: () => void;\n}\n\nexport const SelectedRooms: React.FC<SelectedRoomsProps> = ({ data, onNext, onPrevious}) => {\n    const { getGuestInfo, setBookingData,bookingData } = useBookingContext();\n    const StatGuestFormatted = getGuestInfo(\"stat\");\n    const totalGuest = getGuestInfo('sum') as number;\n\n    const [selectedRooms, setSelectedRooms] = useState<Data[]>([]);\n    const [availableRooms, setAvailableRooms] = useState<Data[]>([]);\n    console.log(bookingData);\n    useEffect(() => {\n        const filteredRooms = data.filter(room => !room.booked);\n        setAvailableRooms(filteredRooms);\n    }, [data]);\n\n    const handleRoomSelection = (room: Data) => {\n        const isSelected = selectedRooms.some((selectedRoom) => selectedRoom.id === room.id);\n        if (isSelected) {\n            const updatedRooms = selectedRooms.filter((selectedRoom) => selectedRoom.id !== room.id);\n            setSelectedRooms(updatedRooms);\n        } else {\n            const totalGuestSelected = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n            const newTotalGuest = totalGuestSelected + room.maxGuest;\n            if (newTotalGuest <= totalGuest) {\n                setSelectedRooms([...selectedRooms, room]);\n            } else {\n                alert('Cannot select more rooms than the total number of guests.');\n            }\n        }\n    };\n\n    const handleNext = () => {\n        const totalSelectedGuests = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n        if (totalSelectedGuests >= totalGuest) {\n            onNext();\n            setBookingData(prev => ({\n                ...prev,\n                roomSelected:[...(prev.roomSelected || []), ...selectedRooms]\n            }));\n        } else {\n            alert('You must select enough rooms to accommodate all guests.');\n        }\n    };\n\n    return (\n        <div className=\"SelectedRoomsConteiner\">\n            <div className='SelectedRooms flex'>\n                <div className='TitleHeader'>\n                    <button onClick={onPrevious} className='PreviousBotton'>Prevuis Page</button>\n                    <h1 style={{ textAlign: \"center\" }}>Select Rooms</h1>\n                    <h3> Total Guest Selected  {totalGuest}</h3>\n                </div>\n                <section>\n                    <input type=\"text\" \n                     readOnly\n                     value={StatGuestFormatted}\n                    />\n                </section>\n                {availableRooms.map((room) => (\n                    <div key={room.id} className='SelectedRoomsItem'>\n                        <div className='SelectedImage'>\n                            <img src={room.src} alt={room.category} style={{ minWidth: \"40rem\", height: \"20rem\", objectFit: \"cover\" }} />\n                        </div>\n                        <div className='SelectedRoomsDescription'>\n                            <h2>{room.category}</h2>\n                            <p>Description: {room.description}</p>\n                            <p>Price: {room.price}$</p>\n                            <p>Max Guests: {room.maxGuest}</p>\n                            <button onClick={() => handleRoomSelection(room)} className='RoomSelectorBotton'>\n                                {selectedRooms.some((selectedRoom) => selectedRoom.id === room.id) ? 'Deselect' : 'Select'}\n                            </button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n            <div className='BottonNext'>\n                <button onClick={handleNext}>Next</button>\n            </div>\n        </div>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}