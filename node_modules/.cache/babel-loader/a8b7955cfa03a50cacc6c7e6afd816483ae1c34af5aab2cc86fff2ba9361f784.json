{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/pages/SelectedRooms.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useBookingContext } from '../components/ContexApplication';\nimport { SelectedRoomCart } from '../components/SelectedRoomCart';\nimport { SelectedRoomHeader } from '../components/SelectedRoomHeader';\nimport \"../css/selectedRoom.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectedRooms = ({\n  data,\n  onNext,\n  onPrevious\n}) => {\n  _s();\n  const {\n    getGuestInfo,\n    setBookingData,\n    bookingData\n  } = useBookingContext();\n  const totalGuest = getGuestInfo('sum');\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const [availableRooms, setAvailableRooms] = useState([]);\n  console.log(bookingData);\n  useEffect(() => {\n    const filteredRooms = data.filter(room => !room.booked);\n    setAvailableRooms(filteredRooms);\n  }, [data]);\n  const handleRoomSelection = room => {\n    const isSelected = selectedRooms.some(selectedRoom => selectedRoom.id === room.id);\n    if (isSelected) {\n      setSelectedRooms(selectedRooms.filter(selectedRoom => selectedRoom.id !== room.id));\n    } else {\n      const totalGuestSelected = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n      const newTotalGuest = totalGuestSelected + room.maxGuest;\n      if (newTotalGuest <= totalGuest) {\n        setSelectedRooms([...selectedRooms, room]);\n      } else {\n        alert('Cannot select more rooms than the total number of guests.');\n      }\n    }\n  };\n  let currentIndex = 0; // This will keep track of the current picture index\n\n  const nextPicture = () => {\n    currentIndex = (currentIndex + 1) % data.length;\n    return currentIndex;\n  };\n  const prevPicture = () => {\n    currentIndex = (currentIndex - 1 + data.length) % data.length;\n    return currentIndex;\n  };\n  const handleNext = () => {\n    const totalSelectedGuests = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n    if (totalSelectedGuests >= totalGuest) {\n      onNext();\n      setBookingData(prev => ({\n        ...prev,\n        roomSelected: [...(prev.roomSelected || []), ...selectedRooms]\n      }));\n    } else {\n      alert('You must select enough rooms to accommodate all guests.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SelectedRoomHeaderConteiner\",\n    children: [/*#__PURE__*/_jsxDEV(SelectedRoomHeader, {\n      onPrevious: onPrevious,\n      handleNext: handleNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: availableRooms.map((room, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RoomItem\",\n        children: /*#__PURE__*/_jsxDEV(SelectedRoomCart, {\n          roomSelected: room,\n          text: selectedRooms.some(selectedRoom => selectedRoom.id === room.id) ? 'Deselect' : 'Select',\n          onSelectedRoom: () => handleRoomSelection(room),\n          currentImage: index\n        }, room.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, room.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectedRooms, \"KmBSM28iSf6iWrfyA3Z609ugzBA=\", false, function () {\n  return [useBookingContext];\n});\n_c = SelectedRooms;\nvar _c;\n$RefreshReg$(_c, \"SelectedRooms\");","map":{"version":3,"names":["React","useEffect","useState","useBookingContext","SelectedRoomCart","SelectedRoomHeader","jsxDEV","_jsxDEV","SelectedRooms","data","onNext","onPrevious","_s","getGuestInfo","setBookingData","bookingData","totalGuest","selectedRooms","setSelectedRooms","availableRooms","setAvailableRooms","console","log","filteredRooms","filter","room","booked","handleRoomSelection","isSelected","some","selectedRoom","id","totalGuestSelected","reduce","total","maxGuest","newTotalGuest","alert","currentIndex","nextPicture","length","prevPicture","handleNext","totalSelectedGuests","prev","roomSelected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","text","onSelectedRoom","currentImage","_c","$RefreshReg$"],"sources":["/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/pages/SelectedRooms.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Data } from '../interfaces/Data';\nimport { useBookingContext } from '../components/ContexApplication';\nimport { SelectedRoomCart } from '../components/SelectedRoomCart';\nimport { SelectedRoomHeader } from '../components/SelectedRoomHeader';\nimport \"../css/selectedRoom.css\";\ninterface SelectedRoomsProps {\n    data: Data[];\n    onNext: () => void;\n    onPrevious: () => void;\n}\n\nexport const SelectedRooms: React.FC<SelectedRoomsProps> = ({ data, onNext, onPrevious }) => {\n    const { getGuestInfo, setBookingData, bookingData } = useBookingContext();\n\n    const totalGuest = getGuestInfo('sum') as number;\n\n    const [selectedRooms, setSelectedRooms] = useState<Data[]>([]);\n    const [availableRooms, setAvailableRooms] = useState<Data[]>([]);\n\n    console.log(bookingData);\n    useEffect(() => {\n        const filteredRooms = data.filter(room => !room.booked);\n        setAvailableRooms(filteredRooms);\n    }, [data]);\n\n    const handleRoomSelection = (room: Data) => {\n        const isSelected = selectedRooms.some((selectedRoom) => selectedRoom.id === room.id);\n        if (isSelected) {\n            setSelectedRooms(selectedRooms.filter((selectedRoom) => selectedRoom.id !== room.id));\n        } else {\n            const totalGuestSelected = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n            const newTotalGuest = totalGuestSelected + room.maxGuest;\n            if (newTotalGuest <= totalGuest) {\n                setSelectedRooms([...selectedRooms, room]);\n            } else {\n                alert('Cannot select more rooms than the total number of guests.');\n            }\n        }\n    };\n\n    let currentIndex = 0; // This will keep track of the current picture index\n\n    const nextPicture = (): number => {\n        currentIndex = (currentIndex + 1) % data.length;\n        return currentIndex;\n    }\n\n    const prevPicture = (): number => {\n        currentIndex = (currentIndex - 1 + data.length) % data.length;\n        return currentIndex;\n    }\n\n    const handleNext = () => {\n        const totalSelectedGuests = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n        if (totalSelectedGuests >= totalGuest) {\n            onNext();\n            setBookingData(prev => ({\n                ...prev,\n                roomSelected: [...(prev.roomSelected || []), ...selectedRooms]\n            }));\n        } else {\n            alert('You must select enough rooms to accommodate all guests.');\n        }\n    };\n    return (\n        <div className=\"SelectedRoomHeaderConteiner\">\n            <SelectedRoomHeader\n                onPrevious={onPrevious}\n                handleNext={handleNext}\n            />\n            <section>\n                {availableRooms.map((room, index) => (\n                    <div className='RoomItem' key={room.id}>\n                        <SelectedRoomCart\n                            roomSelected={room}\n                            key={room.id}\n                            text={selectedRooms.some((selectedRoom) => selectedRoom.id === room.id) ? 'Deselect' : 'Select'}\n                            onSelectedRoom={() => handleRoomSelection(room)}\n                            currentImage={index}\n                        />\n                    </div>\n                ))}\n            </section>\n        </div>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}