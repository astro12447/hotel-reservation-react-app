{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/pages/SelectedRooms.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"../css/selectedRooms.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectedRooms = ({\n  data,\n  onSelectedRoomsChange,\n  totalGuest,\n  onNext\n}) => {\n  _s();\n  const availableRooms = data.filter(room => !room.booked);\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const handleRoomSelection = room => {\n    const isSelected = selectedRooms.some(selectedRoom => selectedRoom.id === room.id);\n    if (isSelected) {\n      const updateRooms = selectedRooms.filter(selectedRoom => selectedRoom.id !== room.id);\n      setSelectedRooms(updateRooms);\n    } else {\n      const totalGuestSelected = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n      const newtotalGuest = totalGuestSelected + room.maxGuest;\n      if (newtotalGuest <= totalGuest) {\n        setSelectedRooms([...selectedRooms, room]);\n      } else {\n        alert('Cannot select more rooms than the total number of guests.');\n      }\n    }\n  };\n  const handleNext = () => {\n    const totalSelectedGuests = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n    if (totalSelectedGuests >= totalGuest) {\n      onNext();\n    } else {\n      alert('You must select enough rooms to accommodate all guests.');\n    }\n  };\n  useEffect(() => {\n    onSelectedRoomsChange(selectedRooms);\n  }, [selectedRooms, onSelectedRoomsChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SelectedRoomsConteiner\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SelectedRooms flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Select Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), availableRooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SelectedRoomsItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SelectedImage\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: room.src,\n            alt: room.category,\n            style: {\n              minWidth: \"40rem\",\n              height: \"20rem\",\n              objectFit: \"cover\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SelectedRoomsDescription\",\n          style: {\n            width: \"30rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: room.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", room.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", room.price, \"$\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Max Guests: \", room.maxGuest]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRoomSelection(room),\n            style: {\n              marginTop: \"1em\",\n              padding: \"1em\",\n              border: \"none\",\n              minWidth: \"10em\"\n            },\n            className: \"RoomSelectorBotton\",\n            children: selectedRooms.some(selectedRoom => selectedRoom.id === room.id) ? 'Deselect' : 'Select'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, room.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      className: \"BottonNext\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        style: {\n          marginTop: \"1em\",\n          padding: \"1em\",\n          border: \"none\",\n          minWidth: \"10em\"\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectedRooms, \"sCuR4gE5S2Pp+mJ6KfhtReAef3Q=\");\n_c = SelectedRooms;\nvar _c;\n$RefreshReg$(_c, \"SelectedRooms\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SelectedRooms","data","onSelectedRoomsChange","totalGuest","onNext","_s","availableRooms","filter","room","booked","selectedRooms","setSelectedRooms","handleRoomSelection","isSelected","some","selectedRoom","id","updateRooms","totalGuestSelected","reduce","total","maxGuest","newtotalGuest","alert","handleNext","totalSelectedGuests","className","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","map","src","alt","category","minWidth","height","objectFit","width","description","price","onClick","marginTop","padding","border","display","justifyContent","_c","$RefreshReg$"],"sources":["/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/pages/SelectedRooms.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Data } from '../interfaces/Data'\nimport \"../css/selectedRooms.css\";\ninterface SelectedRoomsProps {\n    data: Data[];\n    onSelectedRoomsChange: (selectedRooms: Data[]) => void;\n    totalGuest: number;\n    onNext: () => void;\n}\nexport const SelectedRooms: React.FC<SelectedRoomsProps> = ({ data, onSelectedRoomsChange, totalGuest, onNext }) => {\n    const availableRooms = data.filter(room => !room.booked);\n\n    const [selectedRooms, setSelectedRooms] = useState<Data[]>([]);\n\n    const handleRoomSelection = (room: Data) => {\n        const isSelected = selectedRooms.some((selectedRoom) => selectedRoom.id === room.id);\n        if (isSelected) {\n            const updateRooms = selectedRooms.filter((selectedRoom) => selectedRoom.id !== room.id);\n            setSelectedRooms(updateRooms);\n        } else {\n            const totalGuestSelected = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n            const newtotalGuest = totalGuestSelected + room.maxGuest;\n            if (newtotalGuest <= totalGuest) {\n                setSelectedRooms([...selectedRooms, room]);\n            } else {\n                alert('Cannot select more rooms than the total number of guests.');\n            }\n        }\n\n    }\n    const handleNext = () => {\n        const totalSelectedGuests = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n        if (totalSelectedGuests >= totalGuest) {\n            onNext();\n        } else {\n            alert('You must select enough rooms to accommodate all guests.');\n        }\n    }\n    useEffect(() => {\n        onSelectedRoomsChange(selectedRooms)\n    }, [selectedRooms, onSelectedRoomsChange])\n\n    return (\n\n        <div className=\"SelectedRoomsConteiner\">\n            <div className='SelectedRooms flex'>\n                <h1 style={{ textAlign: \"center\" }}>Select Rooms</h1>\n                {availableRooms.map((room) => (\n                    <div key={room.id} className='SelectedRoomsItem'>\n                        <div className='SelectedImage' >\n                            <img src={room.src} alt={room.category}\n                                style={{ minWidth: \"40rem\", height: \"20rem\", objectFit: \"cover\" }}\n                            />\n                        </div>\n                        <div className='SelectedRoomsDescription'\n                            style={{ width: \"30rem\" }}>\n                            <h2>{room.category}</h2>\n                            <p>Description: {room.description}</p>\n                            <p>Price: {room.price}$</p>\n                            <p>Max Guests: {room.maxGuest}</p>\n                            <button onClick={() => handleRoomSelection(room)}\n                                style={{\n                                    marginTop: \"1em\", padding: \"1em\", border: \"none\",\n                                    minWidth: \"10em\"\n                                }}\n                            className='RoomSelectorBotton'>\n                                {selectedRooms.some((selectedRoom) => selectedRoom.id === room.id) ? 'Deselect' : 'Select'}\n                            </button>\n                        </div>\n\n                    </div>\n                ))}\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'center' }} className='BottonNext'>\n                <button onClick={handleNext}\n                    style={{\n                        marginTop: \"1em\", padding: \"1em\", border: \"none\",\n                        minWidth: \"10em\"\n                    }}\n                >Next\n                </button>\n            </div>\n        </div>\n\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}