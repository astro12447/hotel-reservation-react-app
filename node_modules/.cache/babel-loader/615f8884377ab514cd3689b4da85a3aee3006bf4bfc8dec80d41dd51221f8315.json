{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/components/BookingForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DateForm } from './DateForm';\nimport { StatBooking } from './StatBooking';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookingForm = () => {\n  _s();\n  const dateToday = new Date().toISOString().split('T')[0];\n  const [date, setDate] = useState({\n    checkIn: dateToday,\n    checkOut: dateToday\n  });\n  const [inputClicked, setInputClicked] = useState(false);\n  const [reservationData, setReservationData] = useState({\n    date: date,\n    rooms: [{\n      adultCount: 3,\n      child: {\n        count: 0\n      }\n    }]\n  });\n  const handleInputClicked = () => {\n    setInputClicked(true);\n  };\n  // const addAges = (rooms: Room[]): Room[] => {\n  //     return rooms.map(room => {\n  //         if (room.child.count > 0 && !room.child.ages) {\n  //             return {\n  //                 ...room,\n  //                 child: {\n  //                     ...room.child,\n  //                     ages: []\n  //                 }\n  //             };\n  //         }\n  //         return room;\n  //     });\n  // };\n\n  console.log(reservationData);\n  const handleDateChange = (field, value) => {\n    setDate(prevDate => ({\n      ...prevDate,\n      [field]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BookingForm\",\n    children: [/*#__PURE__*/_jsxDEV(DateForm, {\n      date: date,\n      onDateChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StatBooking, {\n      rooms: reservationData.rooms,\n      handleInputClicked: handleInputClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(BookingForm, \"9Tyq/VcLN8NS6nueeKT4wcO46Rs=\");\n_c = BookingForm;\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useState","DateForm","StatBooking","jsxDEV","_jsxDEV","BookingForm","_s","dateToday","Date","toISOString","split","date","setDate","checkIn","checkOut","inputClicked","setInputClicked","reservationData","setReservationData","rooms","adultCount","child","count","handleInputClicked","console","log","handleDateChange","field","value","prevDate","className","children","onDateChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/components/BookingForm.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { BookedDate } from '../interfaces/BookedDate'\nimport { DateForm } from './DateForm';\nimport { ResevationData } from '../interfaces/ReservationData';\nimport { StatBooking } from './StatBooking';\n\nexport const BookingForm: React.FC = () => {\n    const dateToday = new Date().toISOString().split('T')[0];\n    const [date, setDate] = useState<BookedDate>({ checkIn: dateToday, checkOut: dateToday });\n    const [inputClicked, setInputClicked] = useState<boolean>(false);\n    const [reservationData, setReservationData] = useState<ResevationData>({\n        date: date,\n        rooms: [\n            {\n                adultCount: 3,\n                child: { count: 0}\n            },\n        ]\n    });\n    const handleInputClicked = ()=>{\n        setInputClicked(true);\n    }\n    // const addAges = (rooms: Room[]): Room[] => {\n    //     return rooms.map(room => {\n    //         if (room.child.count > 0 && !room.child.ages) {\n    //             return {\n    //                 ...room,\n    //                 child: {\n    //                     ...room.child,\n    //                     ages: []\n    //                 }\n    //             };\n    //         }\n    //         return room;\n    //     });\n    // };\n\n    console.log(reservationData);\n    const handleDateChange = (field: keyof BookedDate, value: string) => {\n        setDate(prevDate => ({\n            ...prevDate,\n            [field]: value\n        }))\n    }\n    return (\n        <div className='BookingForm'>\n            <DateForm\n                date={date}\n                onDateChange={handleDateChange}\n            />\n            <StatBooking \n                rooms={reservationData.rooms}\n                handleInputClicked={handleInputClicked}\n            />\n\n        </div>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,QAAQ,QAAQ,YAAY;AAErC,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,OAAO,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAa;IAAEa,OAAO,EAAEN,SAAS;IAAEO,QAAQ,EAAEP;EAAU,CAAC,CAAC;EACzF,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAU,KAAK,CAAC;EAChE,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAiB;IACnEW,IAAI,EAAEA,IAAI;IACVQ,KAAK,EAAE,CACH;MACIC,UAAU,EAAE,CAAC;MACbC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAC;IACrB,CAAC;EAET,CAAC,CAAC;EACF,MAAMC,kBAAkB,GAAGA,CAAA,KAAI;IAC3BP,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAQ,OAAO,CAACC,GAAG,CAACR,eAAe,CAAC;EAC5B,MAAMS,gBAAgB,GAAGA,CAACC,KAAuB,EAAEC,KAAa,KAAK;IACjEhB,OAAO,CAACiB,QAAQ,KAAK;MACjB,GAAGA,QAAQ;MACX,CAACF,KAAK,GAAGC;IACb,CAAC,CAAC,CAAC;EACP,CAAC;EACD,oBACIxB,OAAA;IAAK0B,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxB3B,OAAA,CAACH,QAAQ;MACLU,IAAI,EAAEA,IAAK;MACXqB,YAAY,EAAEN;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFhC,OAAA,CAACF,WAAW;MACRiB,KAAK,EAAEF,eAAe,CAACE,KAAM;MAC7BI,kBAAkB,EAAEA;IAAmB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEd,CAAC;AAAA9B,EAAA,CAnDYD,WAAqB;AAAAgC,EAAA,GAArBhC,WAAqB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}