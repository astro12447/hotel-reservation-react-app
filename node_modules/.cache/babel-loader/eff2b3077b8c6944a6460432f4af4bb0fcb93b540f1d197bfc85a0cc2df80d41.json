{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/components/SelectAges.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectAges = ({\n  childCount,\n  onAges\n}) => {\n  _s();\n  const [childAges, setChildAges] = useState(Array.from({\n    length: childCount\n  }));\n  const prevChildAgesRef = useRef(childAges);\n  useEffect(() => {\n    setChildAges(Array.from({\n      length: childCount\n    }));\n  }, [childCount]);\n  useEffect(() => {\n    // Only call onAges if childAges has actually changed\n    if (prevChildAgesRef.current !== childAges && !childAges.map(value => value !== undefined)) {\n      onAges(childAges);\n      prevChildAgesRef.current = childAges;\n    }\n  }, [childAges, onAges]);\n  const handleAgeChange = (index, value) => {\n    setChildAges(prev => {\n      const updateAges = [...prev];\n      updateAges[index] = value;\n      return updateAges;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: childAges.map((value, index) => /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"Ages\",\n      id: \"Ages\",\n      value: value,\n      onChange: e => handleAgeChange(index, Number(e.target.value)),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: [\"Select child \", index + 1, \" Ages\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), [...Array(18)].map((_, optionIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: optionIndex,\n        children: optionIndex\n      }, optionIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectAges, \"eL3MeCfqtOyIqa/op0R4o8yp2Pc=\");\n_c = SelectAges;\nvar _c;\n$RefreshReg$(_c, \"SelectAges\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","SelectAges","childCount","onAges","_s","childAges","setChildAges","Array","from","length","prevChildAgesRef","current","map","value","undefined","handleAgeChange","index","prev","updateAges","children","name","id","onChange","e","Number","target","fileName","_jsxFileName","lineNumber","columnNumber","_","optionIndex","_c","$RefreshReg$"],"sources":["/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/components/SelectAges.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\n\ninterface SelectAgesProps {\n    childCount: number;\n    onAges: (dataAges: number[]) => void;\n}\n\nexport const SelectAges: React.FC<SelectAgesProps> = ({ childCount, onAges }) => {\n    const [childAges, setChildAges] = useState<number[]>(Array.from({ length: childCount }));\n    const prevChildAgesRef = useRef<number[]>(childAges);\n\n    useEffect(() => {\n        setChildAges(Array.from({ length: childCount }));\n    }, [childCount]);\n\n    useEffect(() => {\n        // Only call onAges if childAges has actually changed\n        if (prevChildAgesRef.current !== childAges  && !childAges.map(value =>  value!==undefined)) {\n            onAges(childAges);\n            prevChildAgesRef.current = childAges;\n        }\n    }, [childAges, onAges]);\n\n    const handleAgeChange = (index: number, value: number) => {\n        setChildAges(prev => {\n            const updateAges = [...prev];\n            updateAges[index] = value;\n            return updateAges;\n        });\n    };\n\n    return (\n        <section>\n            {childAges.map((value, index) => (\n                <select\n                    name=\"Ages\"\n                    id=\"Ages\"\n                    key={index}\n                    value={value}\n                    onChange={(e) => handleAgeChange(index, Number(e.target.value))}\n                >\n                    <option value=\"\">Select child {index + 1} Ages</option>\n                    {[...Array(18)].map((_, optionIndex) => (\n                        <option key={optionIndex} value={optionIndex}>\n                            {optionIndex}\n                        </option>\n                    ))}\n                </select>\n            ))}\n        </section>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO3D,OAAO,MAAMC,UAAqC,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAWU,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEP;EAAW,CAAC,CAAC,CAAC;EACxF,MAAMQ,gBAAgB,GAAGZ,MAAM,CAAWO,SAAS,CAAC;EAEpDT,SAAS,CAAC,MAAM;IACZU,YAAY,CAACC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEP;IAAW,CAAC,CAAC,CAAC;EACpD,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhBN,SAAS,CAAC,MAAM;IACZ;IACA,IAAIc,gBAAgB,CAACC,OAAO,KAAKN,SAAS,IAAK,CAACA,SAAS,CAACO,GAAG,CAACC,KAAK,IAAKA,KAAK,KAAGC,SAAS,CAAC,EAAE;MACxFX,MAAM,CAACE,SAAS,CAAC;MACjBK,gBAAgB,CAACC,OAAO,GAAGN,SAAS;IACxC;EACJ,CAAC,EAAE,CAACA,SAAS,EAAEF,MAAM,CAAC,CAAC;EAEvB,MAAMY,eAAe,GAAGA,CAACC,KAAa,EAAEH,KAAa,KAAK;IACtDP,YAAY,CAACW,IAAI,IAAI;MACjB,MAAMC,UAAU,GAAG,CAAC,GAAGD,IAAI,CAAC;MAC5BC,UAAU,CAACF,KAAK,CAAC,GAAGH,KAAK;MACzB,OAAOK,UAAU;IACrB,CAAC,CAAC;EACN,CAAC;EAED,oBACIlB,OAAA;IAAAmB,QAAA,EACKd,SAAS,CAACO,GAAG,CAAC,CAACC,KAAK,EAAEG,KAAK,kBACxBhB,OAAA;MACIoB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,MAAM;MAETR,KAAK,EAAEA,KAAM;MACbS,QAAQ,EAAGC,CAAC,IAAKR,eAAe,CAACC,KAAK,EAAEQ,MAAM,CAACD,CAAC,CAACE,MAAM,CAACZ,KAAK,CAAC,CAAE;MAAAM,QAAA,gBAEhEnB,OAAA;QAAQa,KAAK,EAAC,EAAE;QAAAM,QAAA,GAAC,eAAa,EAACH,KAAK,GAAG,CAAC,EAAC,OAAK;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACtD,CAAC,GAAGtB,KAAK,CAAC,EAAE,CAAC,CAAC,CAACK,GAAG,CAAC,CAACkB,CAAC,EAAEC,WAAW,kBAC/B/B,OAAA;QAA0Ba,KAAK,EAAEkB,WAAY;QAAAZ,QAAA,EACxCY;MAAW,GADHA,WAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACX,CAAC;IAAA,GATGb,KAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUN,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAElB,CAAC;AAACzB,EAAA,CA5CWH,UAAqC;AAAA+B,EAAA,GAArC/B,UAAqC;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}