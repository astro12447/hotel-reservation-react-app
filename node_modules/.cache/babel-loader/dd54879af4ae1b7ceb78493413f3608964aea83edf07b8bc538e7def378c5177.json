{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/pages/SelectedRooms.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useBookingContext } from '../components/ContexApplication';\nimport \"../css/selectedRoom.css\";\nimport { SelectedRoomCart } from '../components/SelectedRoomCart';\nimport { SelectedRoomHeader } from '../components/SelectedRoomHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectedRooms = ({\n  data,\n  onNext,\n  onPrevious\n}) => {\n  _s();\n  const {\n    getGuestInfo,\n    setBookingData,\n    bookingData\n  } = useBookingContext();\n  const totalGuest = getGuestInfo('sum');\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const [availableRooms, setAvailableRooms] = useState([]);\n  console.log(bookingData);\n  useEffect(() => {\n    const filteredRooms = data.filter(room => !room.booked);\n    setAvailableRooms(filteredRooms);\n  }, [data]);\n  const handleRoomSelection = room => {\n    const isSelected = selectedRooms.some(selectedRoom => selectedRoom.id === room.id);\n    if (isSelected) {\n      const updatedRooms = selectedRooms.filter(selectedRoom => selectedRoom.id !== room.id);\n      setSelectedRooms(updatedRooms);\n    } else {\n      const totalGuestSelected = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n      const newTotalGuest = totalGuestSelected + room.maxGuest;\n      if (newTotalGuest <= totalGuest) {\n        setSelectedRooms([...selectedRooms, room]);\n      } else {\n        alert('Cannot select more rooms than the total number of guests.');\n      }\n    }\n  };\n  const handleNext = () => {\n    const totalSelectedGuests = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n    if (totalSelectedGuests >= totalGuest) {\n      onNext();\n      setBookingData(prev => ({\n        ...prev,\n        roomSelected: [...(prev.roomSelected || []), ...selectedRooms]\n      }));\n    } else {\n      alert('You must select enough rooms to accommodate all guests.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SelectedRoomHeader\",\n    children: [/*#__PURE__*/_jsxDEV(SelectedRoomHeader, {\n      onPrevious: onPrevious,\n      handleNext: handleNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), availableRooms.map((room, index) => /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(SelectedRoomCart, {\n        roomSelected: room\n      }, room.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRoomSelection(room),\n        className: \"RoomSelectorBotton\",\n        children: selectedRooms.some(selectedRoom => selectedRoom.id === room.id) ? 'Deselect' : 'Select'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectedRooms, \"j183N+5bLlGK3Wwk0/JxJxJi2Uc=\", false, function () {\n  return [useBookingContext];\n});\n_c = SelectedRooms;\nvar _c;\n$RefreshReg$(_c, \"SelectedRooms\");","map":{"version":3,"names":["React","useEffect","useState","useBookingContext","SelectedRoomCart","SelectedRoomHeader","jsxDEV","_jsxDEV","SelectedRooms","data","onNext","onPrevious","_s","getGuestInfo","setBookingData","bookingData","totalGuest","selectedRooms","setSelectedRooms","availableRooms","setAvailableRooms","console","log","filteredRooms","filter","room","booked","handleRoomSelection","isSelected","some","selectedRoom","id","updatedRooms","totalGuestSelected","reduce","total","maxGuest","newTotalGuest","alert","handleNext","totalSelectedGuests","prev","roomSelected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/pages/SelectedRooms.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Data } from '../interfaces/Data';\nimport { useBookingContext } from '../components/ContexApplication';\nimport \"../css/selectedRoom.css\";\nimport { SelectedRoomCart } from '../components/SelectedRoomCart';\nimport { SelectedRoomHeader } from '../components/SelectedRoomHeader';\ninterface SelectedRoomsProps {\n    data: Data[];\n    onNext: () => void;\n    onPrevious: () => void;\n}\n\nexport const SelectedRooms: React.FC<SelectedRoomsProps> = ({ data, onNext, onPrevious }) => {\n    const { getGuestInfo, setBookingData, bookingData } = useBookingContext();\n   \n    const totalGuest = getGuestInfo('sum') as number;\n\n    const [selectedRooms,  setSelectedRooms] = useState<Data[]>([]);\n    const [availableRooms, setAvailableRooms] = useState<Data[]>([]);\n    console.log(bookingData);\n    useEffect(() => {\n        const filteredRooms = data.filter(room => !room.booked);\n        setAvailableRooms(filteredRooms);\n    }, [data]);\n\n    const handleRoomSelection = (room: Data) => {\n        const isSelected = selectedRooms.some((selectedRoom) => selectedRoom.id === room.id);\n        if (isSelected) {\n            const updatedRooms = selectedRooms.filter((selectedRoom) => selectedRoom.id !== room.id);\n            setSelectedRooms(updatedRooms);\n        } else {\n            const totalGuestSelected = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n            const newTotalGuest = totalGuestSelected + room.maxGuest;\n            if (newTotalGuest <= totalGuest) {\n                setSelectedRooms([...selectedRooms, room]);\n            } else {\n                alert('Cannot select more rooms than the total number of guests.');\n            }\n        }\n    };\n\n    const handleNext = () => {\n        const totalSelectedGuests = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n        if (totalSelectedGuests >= totalGuest) {\n            onNext();\n            setBookingData(prev => ({\n                ...prev,\n                roomSelected: [...(prev.roomSelected || []), ...selectedRooms]\n            }));\n        } else {\n            alert('You must select enough rooms to accommodate all guests.');\n        }\n    };\n\n    return (\n        <div className=\"SelectedRoomHeader\">\n                <SelectedRoomHeader \n                    onPrevious={onPrevious}\n                    handleNext={handleNext}\n                />\n                {availableRooms.map((room, index) => (\n                    <section>\n                        <SelectedRoomCart\n                            roomSelected={room}\n                            key={room.id}\n                        />\n                        <button onClick={() => handleRoomSelection(room)} className='RoomSelectorBotton'>\n                            {selectedRooms.some((selectedRoom) => selectedRoom.id === room.id) ? 'Deselect' : 'Select'}\n                        </button>\n                    </section>\n                ))}\n            </div>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}