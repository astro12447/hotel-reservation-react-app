{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/components/BookingForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n//import { DateForm } from './DateForm';\n//import { ResevationData } from '../interfaces/ReservationData';\n//import { StatBooking } from './StatBooking';\n//import { GuestForm } from './RoomDataForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookingForm = () => {\n  _s();\n  const today = new Date().toISOString().split('T')[0];\n  const [date, setDate] = useState({\n    checkIn: today,\n    checkOut: today\n  });\n  const [inputClicked, setInputClicked] = useState(false);\n  const inicialRooms = new Map();\n  inicialRooms.set(1, {\n    adultCount: 1,\n    child: {\n      childCount: 0,\n      ages: []\n    }\n  });\n  const inicialReservationData = {\n    date: {\n      checkIn: today,\n      checkOut: today\n    },\n    rooms: inicialRooms,\n    guest: {\n      name: '',\n      lastName: '',\n      email: '',\n      phone: ''\n    }\n  };\n  const [reservationData, setReservationData] = useState(inicialReservationData);\n  const [receivedRooms, setReceivedRooms] = useState(new Map());\n  // React utiliza un flujo de datos en una sola dirección, pasando datos hacia abajo de la jerarquía de \n  // componentes desde el componente padre al hijo\n  console.log(reservationData);\n  const addNewRoom = () => {\n    const newRoom = {\n      adultCount: 1,\n      child: {\n        childCount: 0,\n        ages: []\n      }\n    };\n    const newRooms = new Map(reservationData.rooms);\n    newRooms.set(reservationData.rooms.size + 1, newRoom);\n    setReservationData(prev => ({\n      ...prev,\n      rooms: newRooms\n    }));\n  };\n  const handleReceivedRooms = rooms => {\n    setReceivedRooms(rooms);\n  };\n  const handleInputClicked = () => {\n    setInputClicked(true);\n  };\n  console.log(receivedRooms);\n  const handleDateChange = (field, value) => {\n    setDate(prevDate => ({\n      ...prevDate,\n      [field]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BookingForm\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewRoom,\n      children: \" add room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(BookingForm, \"/MLt+bGs7uLdU3SDTboZzsTHz1E=\");\n_c = BookingForm;\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BookingForm","_s","today","Date","toISOString","split","date","setDate","checkIn","checkOut","inputClicked","setInputClicked","inicialRooms","Map","set","adultCount","child","childCount","ages","inicialReservationData","rooms","guest","name","lastName","email","phone","reservationData","setReservationData","receivedRooms","setReceivedRooms","console","log","addNewRoom","newRoom","newRooms","size","prev","handleReceivedRooms","handleInputClicked","handleDateChange","field","value","prevDate","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/components/BookingForm.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { date } from '../interfaces/BookedDate'\n//import { DateForm } from './DateForm';\n//import { ResevationData } from '../interfaces/ReservationData';\n//import { StatBooking } from './StatBooking';\n//import { GuestForm } from './RoomDataForm';\nimport { room } from '../interfaces/Room';\nimport { resevationData } from '../interfaces/ReservationData';\nexport const BookingForm: React.FC = () => {\n    const today = new Date().toISOString().split('T')[0];\n    const [date, setDate] = useState<date>({ checkIn: today, checkOut: today });\n    const [inputClicked, setInputClicked] = useState<boolean>(false);\n    const inicialRooms = new Map<number, room>();\n    inicialRooms.set(1, { adultCount: 1, child: { childCount: 0, ages: [] } });\n\n    const inicialReservationData: resevationData = {\n        date:  { checkIn: today, checkOut: today },\n        rooms: inicialRooms,\n        guest: { name: '', lastName: '', email: '', phone: '' }\n    }\n    const [reservationData, setReservationData] = useState<resevationData>(inicialReservationData);\n\n    const [receivedRooms, setReceivedRooms] = useState<Map<number, room>>(new Map());\n    // React utiliza un flujo de datos en una sola dirección, pasando datos hacia abajo de la jerarquía de \n    // componentes desde el componente padre al hijo\n    console.log(reservationData);\n\n    const addNewRoom = ()=>{\n        const newRoom:room = {\n            adultCount:1,\n            child:{childCount:0, ages:[]}\n        }\n        const newRooms = new Map(reservationData.rooms);\n        newRooms.set(reservationData.rooms.size + 1, newRoom);\n        setReservationData(prev => ({\n            ...prev,\n            rooms:newRooms\n        }))\n    }\n    \n\n    const handleReceivedRooms = (rooms: Map<number, room>) => {\n        setReceivedRooms(rooms);\n    }\n\n    const handleInputClicked = () => {\n        setInputClicked(true);\n    }\n\n    console.log(receivedRooms);\n    const handleDateChange = (field: keyof date, value: string) => {\n        setDate(prevDate => ({\n            ...prevDate,\n            [field]: value\n        }))\n    }\n    return (\n        <div className='BookingForm'>\n            {/* <DateForm\n                date={date}\n                onDateChange={handleDateChange}\n            />\n            <StatBooking\n                rooms={receivedRooms}\n                handleInputClicked={handleInputClicked}\n            />\n            {inputClicked && <div className='GuestForm'>\n                <GuestForm\n                    onSendRoomData={handleReceivedRooms}\n                />\n                <button onClick={() => setInputClicked(false)}>Next</button>\n            </div>\n            } */}\n\n            <button onClick={addNewRoom}> add room</button>\n        </div>\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}