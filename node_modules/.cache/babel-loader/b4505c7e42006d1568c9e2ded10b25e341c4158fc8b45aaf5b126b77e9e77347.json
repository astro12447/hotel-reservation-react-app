{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/pages/SelectedRooms.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useBookingContext } from '../components/ContexApplication';\nimport \"../css/selectedRoom.css\";\nimport { SelectedRoomCart } from '../components/SelectedRoomCart';\nimport { BottonNext } from '../components/BottonNext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectedRooms = ({\n  data,\n  onNext,\n  onPrevious\n}) => {\n  _s();\n  const {\n    getGuestInfo,\n    setBookingData,\n    bookingData\n  } = useBookingContext();\n  const StatGuestFormatted = getGuestInfo(\"stat\");\n  const totalGuest = getGuestInfo('sum');\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const [availableRooms, setAvailableRooms] = useState([]);\n  console.log(bookingData);\n  useEffect(() => {\n    const filteredRooms = data.filter(room => !room.booked);\n    setAvailableRooms(filteredRooms);\n  }, [data]);\n  const handleRoomSelection = room => {\n    const isSelected = selectedRooms.some(selectedRoom => selectedRoom.id === room.id);\n    if (isSelected) {\n      const updatedRooms = selectedRooms.filter(selectedRoom => selectedRoom.id !== room.id);\n      setSelectedRooms(updatedRooms);\n    } else {\n      const totalGuestSelected = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n      const newTotalGuest = totalGuestSelected + room.maxGuest;\n      if (newTotalGuest <= totalGuest) {\n        setSelectedRooms([...selectedRooms, room]);\n      } else {\n        alert('Cannot select more rooms than the total number of guests.');\n      }\n    }\n  };\n  const handleNext = () => {\n    const totalSelectedGuests = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n    if (totalSelectedGuests >= totalGuest) {\n      onNext();\n      setBookingData(prev => ({\n        ...prev,\n        roomSelected: [...(prev.roomSelected || []), ...selectedRooms]\n      }));\n    } else {\n      alert('You must select enough rooms to accommodate all guests.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SelectedRoomsConteiner\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SelectedRooms flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: \"center\",\n            fontSize: \"2rem\"\n          },\n          children: \"SELECT ROOM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Header flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onPrevious,\n            className: \"prevuisPage\",\n            children: \"Prevuis Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"GuestSelectedInformation\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"StatGuestFormatted\",\n            style: {\n              fontSize: \"1rem\",\n              fontWeight: \"bold\",\n              marginRight: \"1em\"\n            },\n            children: \"GUEST SELECTED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            readOnly: true,\n            value: StatGuestFormatted,\n            style: {\n              fontWeight: \"bold\",\n              padding: \"1em\",\n              minWidth: \"20rem\",\n              backgroundColor: \"rgb(92, 92, 92)\",\n              color: \"#fff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BottonNext, {\n          onNextPage: handleNext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), availableRooms.map((room, index) => /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(SelectedRoomCart, {\n          roomSelected: room\n        }, room.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRoomSelection(room),\n          className: \"RoomSelectorBotton\",\n          children: selectedRooms.some(selectedRoom => selectedRoom.id === room.id) ? 'Deselect' : 'Select'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectedRooms, \"KmBSM28iSf6iWrfyA3Z609ugzBA=\", false, function () {\n  return [useBookingContext];\n});\n_c = SelectedRooms;\nvar _c;\n$RefreshReg$(_c, \"SelectedRooms\");","map":{"version":3,"names":["React","useEffect","useState","useBookingContext","SelectedRoomCart","BottonNext","jsxDEV","_jsxDEV","SelectedRooms","data","onNext","onPrevious","_s","getGuestInfo","setBookingData","bookingData","StatGuestFormatted","totalGuest","selectedRooms","setSelectedRooms","availableRooms","setAvailableRooms","console","log","filteredRooms","filter","room","booked","handleRoomSelection","isSelected","some","selectedRoom","id","updatedRooms","totalGuestSelected","reduce","total","maxGuest","newTotalGuest","alert","handleNext","totalSelectedGuests","prev","roomSelected","className","children","style","textAlign","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","fontWeight","marginRight","type","readOnly","value","padding","minWidth","backgroundColor","color","onNextPage","map","index","_c","$RefreshReg$"],"sources":["/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/pages/SelectedRooms.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Data } from '../interfaces/Data';\nimport { useBookingContext } from '../components/ContexApplication';\nimport \"../css/selectedRoom.css\";\nimport { SelectedRoomCart } from '../components/SelectedRoomCart';\nimport { BottonNext } from '../components/BottonNext';\ninterface SelectedRoomsProps {\n    data: Data[];\n    onNext: () => void;\n    onPrevious: () => void;\n}\n\nexport const SelectedRooms: React.FC<SelectedRoomsProps> = ({ data, onNext, onPrevious }) => {\n    const { getGuestInfo, setBookingData, bookingData } = useBookingContext();\n    const StatGuestFormatted = getGuestInfo(\"stat\");\n    const totalGuest = getGuestInfo('sum') as number;\n\n    const [selectedRooms, setSelectedRooms] = useState<Data[]>([]);\n    const [availableRooms, setAvailableRooms] = useState<Data[]>([]);\n    console.log(bookingData);\n    useEffect(() => {\n        const filteredRooms = data.filter(room => !room.booked);\n        setAvailableRooms(filteredRooms);\n    }, [data]);\n\n    const handleRoomSelection = (room: Data) => {\n        const isSelected = selectedRooms.some((selectedRoom) => selectedRoom.id === room.id);\n        if (isSelected) {\n            const updatedRooms = selectedRooms.filter((selectedRoom) => selectedRoom.id !== room.id);\n            setSelectedRooms(updatedRooms);\n        } else {\n            const totalGuestSelected = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n            const newTotalGuest = totalGuestSelected + room.maxGuest;\n            if (newTotalGuest <= totalGuest) {\n                setSelectedRooms([...selectedRooms, room]);\n            } else {\n                alert('Cannot select more rooms than the total number of guests.');\n            }\n        }\n    };\n\n    const handleNext = () => {\n        const totalSelectedGuests = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n        if (totalSelectedGuests >= totalGuest) {\n            onNext();\n            setBookingData(prev => ({\n                ...prev,\n                roomSelected: [...(prev.roomSelected || []), ...selectedRooms]\n            }));\n        } else {\n            alert('You must select enough rooms to accommodate all guests.');\n        }\n    };\n\n    return (\n        <div className=\"SelectedRoomsConteiner\">\n            <div className='SelectedRooms flex'>\n                <div>\n                    <h1 style={{ textAlign: \"center\", fontSize: \"2rem\" }}>SELECT ROOM</h1>\n                </div>\n                <div className='Header flex'>\n                    <div>\n                        <button onClick={onPrevious} className='prevuisPage'>Prevuis Page</button>\n                    </div>\n\n                    <div className='GuestSelectedInformation'>\n                        <label\n                            htmlFor=\"StatGuestFormatted\"\n                            style={{ fontSize: \"1rem\", fontWeight: \"bold\", marginRight: \"1em\" }}\n                        >GUEST SELECTED\n                        </label>\n                        <input type=\"text\"\n                            readOnly\n                            value={StatGuestFormatted}\n                            style={{\n                                fontWeight: \"bold\", padding: \"1em\",\n                                minWidth: \"20rem\", backgroundColor: \"rgb(92, 92, 92)\"\n                                , color: \"#fff\"\n                            }}\n\n                        />\n                    </div>\n                    <BottonNext onNextPage={handleNext}></BottonNext>\n                </div>\n                {availableRooms.map((room, index) => (\n                    <section>\n                        <SelectedRoomCart\n                            roomSelected={room}\n                            key={room.id}\n                        />\n                        <button onClick={() => handleRoomSelection(room)} className='RoomSelectorBotton'>\n                            {selectedRooms.some((selectedRoom) => selectedRoom.id === room.id) ? 'Deselect' : 'Select'}\n                        </button>\n                    </section>\n                ))}\n            </div>\n\n        </div>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,OAAO,yBAAyB;AAChC,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,UAAU,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOtD,OAAO,MAAMC,aAA2C,GAAGA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACzF,MAAM;IAAEC,YAAY;IAAEC,cAAc;IAAEC;EAAY,CAAC,GAAGZ,iBAAiB,CAAC,CAAC;EACzE,MAAMa,kBAAkB,GAAGH,YAAY,CAAC,MAAM,CAAC;EAC/C,MAAMI,UAAU,GAAGJ,YAAY,CAAC,KAAK,CAAW;EAEhD,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAS,EAAE,CAAC;EAC9D,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAS,EAAE,CAAC;EAChEoB,OAAO,CAACC,GAAG,CAACR,WAAW,CAAC;EACxBd,SAAS,CAAC,MAAM;IACZ,MAAMuB,aAAa,GAAGf,IAAI,CAACgB,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,MAAM,CAAC;IACvDN,iBAAiB,CAACG,aAAa,CAAC;EACpC,CAAC,EAAE,CAACf,IAAI,CAAC,CAAC;EAEV,MAAMmB,mBAAmB,GAAIF,IAAU,IAAK;IACxC,MAAMG,UAAU,GAAGX,aAAa,CAACY,IAAI,CAAEC,YAAY,IAAKA,YAAY,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;IACpF,IAAIH,UAAU,EAAE;MACZ,MAAMI,YAAY,GAAGf,aAAa,CAACO,MAAM,CAAEM,YAAY,IAAKA,YAAY,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;MACxFb,gBAAgB,CAACc,YAAY,CAAC;IAClC,CAAC,MAAM;MACH,MAAMC,kBAAkB,GAAGhB,aAAa,CAACiB,MAAM,CAAC,CAACC,KAAK,EAAEL,YAAY,KAAKK,KAAK,GAAGL,YAAY,CAACM,QAAQ,EAAE,CAAC,CAAC;MAC1G,MAAMC,aAAa,GAAGJ,kBAAkB,GAAGR,IAAI,CAACW,QAAQ;MACxD,IAAIC,aAAa,IAAIrB,UAAU,EAAE;QAC7BE,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEQ,IAAI,CAAC,CAAC;MAC9C,CAAC,MAAM;QACHa,KAAK,CAAC,2DAA2D,CAAC;MACtE;IACJ;EACJ,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,mBAAmB,GAAGvB,aAAa,CAACiB,MAAM,CAAC,CAACC,KAAK,EAAEL,YAAY,KAAKK,KAAK,GAAGL,YAAY,CAACM,QAAQ,EAAE,CAAC,CAAC;IAC3G,IAAII,mBAAmB,IAAIxB,UAAU,EAAE;MACnCP,MAAM,CAAC,CAAC;MACRI,cAAc,CAAC4B,IAAI,KAAK;QACpB,GAAGA,IAAI;QACPC,YAAY,EAAE,CAAC,IAAID,IAAI,CAACC,YAAY,IAAI,EAAE,CAAC,EAAE,GAAGzB,aAAa;MACjE,CAAC,CAAC,CAAC;IACP,CAAC,MAAM;MACHqB,KAAK,CAAC,yDAAyD,CAAC;IACpE;EACJ,CAAC;EAED,oBACIhC,OAAA;IAAKqC,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACnCtC,OAAA;MAAKqC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/BtC,OAAA;QAAAsC,QAAA,eACItC,OAAA;UAAIuC,KAAK,EAAE;YAAEC,SAAS,EAAE,QAAQ;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAAH,QAAA,EAAC;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,eACN7C,OAAA;QAAKqC,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBtC,OAAA;UAAAsC,QAAA,eACItC,OAAA;YAAQ8C,OAAO,EAAE1C,UAAW;YAACiC,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC,eAEN7C,OAAA;UAAKqC,SAAS,EAAC,0BAA0B;UAAAC,QAAA,gBACrCtC,OAAA;YACI+C,OAAO,EAAC,oBAAoB;YAC5BR,KAAK,EAAE;cAAEE,QAAQ,EAAE,MAAM;cAAEO,UAAU,EAAE,MAAM;cAAEC,WAAW,EAAE;YAAM,CAAE;YAAAX,QAAA,EACvE;UACD;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR7C,OAAA;YAAOkD,IAAI,EAAC,MAAM;YACdC,QAAQ;YACRC,KAAK,EAAE3C,kBAAmB;YAC1B8B,KAAK,EAAE;cACHS,UAAU,EAAE,MAAM;cAAEK,OAAO,EAAE,KAAK;cAClCC,QAAQ,EAAE,OAAO;cAAEC,eAAe,EAAE,iBAAiB;cACnDC,KAAK,EAAE;YACb;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACN7C,OAAA,CAACF,UAAU;UAAC2D,UAAU,EAAExB;QAAW;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,EACLhC,cAAc,CAAC6C,GAAG,CAAC,CAACvC,IAAI,EAAEwC,KAAK,kBAC5B3D,OAAA;QAAAsC,QAAA,gBACItC,OAAA,CAACH,gBAAgB;UACbuC,YAAY,EAAEjB;QAAK,GACdA,IAAI,CAACM,EAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,eACF7C,OAAA;UAAQ8C,OAAO,EAAEA,CAAA,KAAMzB,mBAAmB,CAACF,IAAI,CAAE;UAACkB,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAC3E3B,aAAa,CAACY,IAAI,CAAEC,YAAY,IAAKA,YAAY,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC,GAAG,UAAU,GAAG;QAAQ;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAACxC,EAAA,CAvFWJ,aAA2C;EAAA,QACEL,iBAAiB;AAAA;AAAAgE,EAAA,GAD9D3D,aAA2C;AAAA,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}