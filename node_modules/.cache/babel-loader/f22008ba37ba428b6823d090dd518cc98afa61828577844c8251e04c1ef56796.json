{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/components/BookingForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DateForm } from './DateForm';\nimport { StatBooking } from './StatBooking';\nimport { GuestForm } from './RoomDataForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookingForm = () => {\n  _s();\n  const today = new Date().toISOString().split('T')[0];\n  const [date, setDate] = useState({\n    checkIn: today,\n    checkOut: today\n  });\n  const [inputClicked, setInputClicked] = useState(false);\n  const inicialRooms = new Map();\n  inicialRooms.set(1, {\n    adultCount: 1,\n    child: {\n      childCount: 0,\n      ages: []\n    }\n  });\n  const inicialReservationData = {\n    date: {\n      checkIn: today,\n      checkOut: today\n    },\n    rooms: inicialRooms,\n    guest: {\n      name: '',\n      lastName: '',\n      email: '',\n      phone: ''\n    }\n  };\n  const [reservationData, setReservationData] = useState(inicialReservationData);\n\n  //const [receivedRooms, setReceivedRooms] = useState<Map<number, room>>(new Map());\n  // React utiliza un flujo de datos en una sola dirección, pasando datos hacia abajo de la jerarquía de \n  // componentes desde el componente padre al hijo\n  console.log(reservationData);\n  const addNewRoom = () => {\n    const newRoom = {\n      adultCount: 1,\n      child: {\n        childCount: 0,\n        ages: []\n      }\n    };\n    const newRooms = new Map(reservationData.rooms);\n    newRooms.set(reservationData.rooms.size + 1, newRoom);\n    setReservationData(prev => ({\n      ...prev,\n      rooms: newRooms\n    }));\n  };\n  const handleGuestCountChange = (index, field, value) => {\n    setReservationData(prev => {\n      const updateRooms = new Map(prev.rooms);\n      const updateRoom = updateRooms.get(index);\n      if (updateRoom) {\n        if (field === 'adultCount') {\n          updateRoom.adultCount = value;\n        } else if (field === 'childCount') {\n          updateRoom.child.childCount = value;\n        }\n        updateRooms.set(index, updateRoom);\n        return {\n          ...prev,\n          rooms: updateRooms\n        };\n      }\n      return prev;\n    });\n  };\n  const handleChildAgeChange = (index, ages) => {\n    setReservationData(prev => {\n      const updateRooms = new Map(prev.rooms);\n      const roomToUpdate = updateRooms.get(index);\n      if (roomToUpdate) {\n        roomToUpdate.child.ages = ages;\n        updateRooms.set(index, roomToUpdate);\n        return {\n          ...prev,\n          rooms: updateRooms\n        };\n      }\n      return prev;\n    });\n  };\n  const handleDeleteRoom = index => {\n    setReservationData(prev => {\n      const updateRooms = new Map(reservationData.rooms);\n      updateRooms.delete(index);\n      return {\n        ...prev,\n        rooms: updateRooms\n      };\n    });\n  };\n  const handleInputClicked = () => {\n    setInputClicked(true);\n  };\n  const handleDateChange = (field, value) => {\n    setDate(prevDate => ({\n      ...prevDate,\n      [field]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BookingForm\",\n    children: [/*#__PURE__*/_jsxDEV(DateForm, {\n      date: date,\n      onDateChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StatBooking, {\n      rooms: reservationData.rooms,\n      handleInputClicked: handleInputClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), inputClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(GuestForm, {\n        rooms: reservationData.rooms,\n        onHandleGuestCountChange: handleGuestCountChange,\n        onDeleteRoom: handleDeleteRoom,\n        onChildAgesChange: handleChildAgeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setInputClicked(false),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewRoom,\n        children: \" add room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(BookingForm, \"21Ov/pvSjL/QwGBsdxWbTH0vXWY=\");\n_c = BookingForm;\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useState","DateForm","StatBooking","GuestForm","jsxDEV","_jsxDEV","BookingForm","_s","today","Date","toISOString","split","date","setDate","checkIn","checkOut","inputClicked","setInputClicked","inicialRooms","Map","set","adultCount","child","childCount","ages","inicialReservationData","rooms","guest","name","lastName","email","phone","reservationData","setReservationData","console","log","addNewRoom","newRoom","newRooms","size","prev","handleGuestCountChange","index","field","value","updateRooms","updateRoom","get","handleChildAgeChange","roomToUpdate","handleDeleteRoom","delete","handleInputClicked","handleDateChange","prevDate","className","children","onDateChange","fileName","_jsxFileName","lineNumber","columnNumber","onHandleGuestCountChange","onDeleteRoom","onChildAgesChange","onClick","_c","$RefreshReg$"],"sources":["/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/components/BookingForm.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { date } from '../interfaces/BookedDate'\nimport { DateForm } from './DateForm';\nimport { StatBooking } from './StatBooking';\nimport { GuestForm } from './RoomDataForm';\nimport { room } from '../interfaces/Room';\nimport { resevationData } from '../interfaces/ReservationData';\nimport { rootCertificates } from 'tls';\ntype field = \"adultCount\" | \"childCount\";\n\nexport const BookingForm: React.FC = () => {\n    const today = new Date().toISOString().split('T')[0];\n    const [date, setDate] = useState<date>({ checkIn: today, checkOut: today });\n    const [inputClicked, setInputClicked] = useState<boolean>(false);\n    const inicialRooms = new Map<number, room>();\n    inicialRooms.set(1, { adultCount: 1, child: { childCount: 0, ages: [] } });\n\n    const inicialReservationData: resevationData = {\n        date: { checkIn: today, checkOut: today },\n        rooms: inicialRooms,\n        guest: { name: '', lastName: '', email: '', phone: '' }\n    }\n    const [reservationData, setReservationData] = useState<resevationData>(inicialReservationData);\n\n    //const [receivedRooms, setReceivedRooms] = useState<Map<number, room>>(new Map());\n    // React utiliza un flujo de datos en una sola dirección, pasando datos hacia abajo de la jerarquía de \n    // componentes desde el componente padre al hijo\n    console.log(reservationData);\n\n    const addNewRoom = () => {\n        const newRoom: room = {\n            adultCount: 1,\n            child: { childCount: 0, ages: [] }\n        }\n        const newRooms = new Map(reservationData.rooms);\n        newRooms.set(reservationData.rooms.size + 1, newRoom);\n        setReservationData(prev => ({\n            ...prev,\n            rooms: newRooms\n        }))\n    }\n    const handleGuestCountChange = (index: number, field: field, value: number) => {\n        setReservationData(prev => {\n            const updateRooms = new Map(prev.rooms);\n            const updateRoom = updateRooms.get(index);\n            if (updateRoom) {\n                if (field === 'adultCount') {\n                    updateRoom.adultCount = value;\n                } else if (field === 'childCount') {\n                    updateRoom.child.childCount = value;\n                }\n                updateRooms.set(index, updateRoom);\n                return {\n                    ...prev,\n                    rooms: updateRooms\n                }\n\n            }\n            return prev\n        });\n    }\n    const handleChildAgeChange = (index: number, ages: number[]) => {\n        setReservationData(prev => {\n            const updateRooms = new Map(prev.rooms);\n            const roomToUpdate = updateRooms.get(index);\n            if (roomToUpdate) {\n                roomToUpdate.child.ages = ages;\n                updateRooms.set(index, roomToUpdate);\n                return {\n                    ...prev,\n                    rooms: updateRooms\n                }\n            }\n            return prev\n        })\n    }\n    const handleDeleteRoom = (index: number) => {\n        setReservationData(prev => {\n            const updateRooms = new Map(reservationData.rooms);\n            updateRooms.delete(index);\n            return {\n                ...prev,\n                rooms: updateRooms\n            }\n        })\n    }\n    const handleInputClicked = () => {\n        setInputClicked(true);\n    }\n\n    const handleDateChange = (field: keyof date, value: string) => {\n        setDate(prevDate => ({\n            ...prevDate,\n            [field]: value\n        }))\n    }\n    return (\n        <div className='BookingForm'>\n            <DateForm\n                date={date}\n                onDateChange={handleDateChange}\n            />\n            <StatBooking\n                rooms={reservationData.rooms}\n                handleInputClicked={handleInputClicked}\n            />\n            {\n                inputClicked && <div>\n                    <GuestForm\n                        rooms={reservationData.rooms}\n                        onHandleGuestCountChange={handleGuestCountChange}\n                        onDeleteRoom={handleDeleteRoom}\n                        onChildAgesChange={handleChildAgeChange}\n                    />\n                    <button onClick={() => setInputClicked(false)}>Next</button>\n                    <button onClick={addNewRoom}> add room</button>\n                </div>\n            }\n        </div>\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}