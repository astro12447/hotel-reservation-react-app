{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/pages/SelectedRooms.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useBookingContext } from '../components/ContexApplication';\nimport { SelectedRoomCart } from '../components/SelectedRoomCart';\nimport { SelectedRoomHeader } from '../components/SelectedRoomHeader';\nimport \"../css/selectedRoom.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectedRooms = ({\n  data,\n  onNext,\n  onPrevious\n}) => {\n  _s();\n  const {\n    getGuestInfo,\n    setBookingData,\n    bookingData\n  } = useBookingContext();\n  const totalGuest = getGuestInfo('sum');\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const [availableRooms, setAvailableRooms] = useState([]);\n  const [imageIndex, setImageIndex] = useState(0);\n  console.log(bookingData);\n  useEffect(() => {\n    const filteredRooms = data.filter(room => !room.booked);\n    setAvailableRooms(filteredRooms);\n  }, [data]);\n  const handleRoomSelection = room => {\n    const isSelected = selectedRooms.some(selectedRoom => selectedRoom.id === room.id);\n    if (isSelected) {\n      setSelectedRooms(selectedRooms.filter(selectedRoom => selectedRoom.id !== room.id));\n    } else {\n      const totalGuestSelected = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n      const newTotalGuest = totalGuestSelected + room.maxGuest;\n      if (newTotalGuest <= totalGuest) {\n        setSelectedRooms([...selectedRooms, room]);\n      } else {\n        alert('Cannot select more rooms than the total number of guests.');\n      }\n    }\n  };\n  const handleNextIndex = () => {\n    let nextIndex = (imageIndex + 1) % data.length;\n    setImageIndex(nextIndex);\n  };\n  const handlePrevIndex = () => {\n    let prevIndex = (imageIndex - 1 + data.length) % data.length;\n    setImageIndex(prevIndex);\n  };\n  const handleNext = () => {\n    const totalSelectedGuests = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n    if (totalSelectedGuests >= totalGuest) {\n      onNext();\n      setBookingData(prev => ({\n        ...prev,\n        roomSelected: [...(prev.roomSelected || []), ...selectedRooms]\n      }));\n    } else {\n      alert('You must select enough rooms to accommodate all guests.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SelectedRoomHeaderConteiner\",\n    children: [/*#__PURE__*/_jsxDEV(SelectedRoomHeader, {\n      onPrevious: onPrevious,\n      handleNext: handleNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: availableRooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RoomItem\",\n        children: [/*#__PURE__*/_jsxDEV(SelectedRoomCart, {\n          roomSelected: room,\n          text: selectedRooms.some(selectedRoom => selectedRoom.id === room.id) ? 'Deselect' : 'Select',\n          onSelectedRoom: () => handleRoomSelection(room),\n          currentImage: imageIndex\n        }, room.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), imageIndex, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextIndex,\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevIndex,\n          children: \"prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, room.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectedRooms, \"ozDJpJpo5Hh3uT9BEkhQ36tP4y4=\", false, function () {\n  return [useBookingContext];\n});\n_c = SelectedRooms;\nvar _c;\n$RefreshReg$(_c, \"SelectedRooms\");","map":{"version":3,"names":["React","useEffect","useState","useBookingContext","SelectedRoomCart","SelectedRoomHeader","jsxDEV","_jsxDEV","SelectedRooms","data","onNext","onPrevious","_s","getGuestInfo","setBookingData","bookingData","totalGuest","selectedRooms","setSelectedRooms","availableRooms","setAvailableRooms","imageIndex","setImageIndex","console","log","filteredRooms","filter","room","booked","handleRoomSelection","isSelected","some","selectedRoom","id","totalGuestSelected","reduce","total","maxGuest","newTotalGuest","alert","handleNextIndex","nextIndex","length","handlePrevIndex","prevIndex","handleNext","totalSelectedGuests","prev","roomSelected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","text","onSelectedRoom","currentImage","onClick","_c","$RefreshReg$"],"sources":["/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/pages/SelectedRooms.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Data } from '../interfaces/Data';\nimport { useBookingContext } from '../components/ContexApplication';\nimport { SelectedRoomCart } from '../components/SelectedRoomCart';\nimport { SelectedRoomHeader } from '../components/SelectedRoomHeader';\nimport \"../css/selectedRoom.css\";\ninterface SelectedRoomsProps {\n    data: Data[];\n    onNext: () => void;\n    onPrevious: () => void;\n}\n\nexport const SelectedRooms: React.FC<SelectedRoomsProps> = ({ data, onNext, onPrevious }) => {\n    const { getGuestInfo, setBookingData, bookingData } = useBookingContext();\n    const totalGuest = getGuestInfo('sum') as number;\n    const [selectedRooms, setSelectedRooms] = useState<Data[]>([]);\n    const [availableRooms, setAvailableRooms] = useState<Data[]>([]);\n    const [imageIndex, setImageIndex] = useState<number>(0);\n    console.log(bookingData);\n    useEffect(() => {\n        const filteredRooms = data.filter(room => !room.booked);\n        setAvailableRooms(filteredRooms);\n    }, [data]);\n\n    const handleRoomSelection = (room: Data) => {\n        const isSelected = selectedRooms.some((selectedRoom) => selectedRoom.id === room.id);\n        if (isSelected) {\n            setSelectedRooms(selectedRooms.filter((selectedRoom) => selectedRoom.id !== room.id));\n        } else {\n            const totalGuestSelected = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n            const newTotalGuest = totalGuestSelected + room.maxGuest;\n            if (newTotalGuest <= totalGuest) {\n                setSelectedRooms([...selectedRooms, room]);\n            } else {\n                alert('Cannot select more rooms than the total number of guests.');\n            }\n        }\n    };\n\n\n    const handleNextIndex = () => {\n        let nextIndex = (imageIndex + 1) % data.length;\n        setImageIndex(nextIndex);\n    }\n\n    const handlePrevIndex = () => {\n        let prevIndex = (imageIndex - 1 + data.length) % data.length;\n       setImageIndex(prevIndex);\n    }\n\n    const handleNext = () => {\n        const totalSelectedGuests = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n        if (totalSelectedGuests >= totalGuest) {\n            onNext();\n            setBookingData(prev => ({\n                ...prev,\n                roomSelected: [...(prev.roomSelected || []), ...selectedRooms]\n            }));\n        } else {\n            alert('You must select enough rooms to accommodate all guests.');\n        }\n    };\n    return (\n        <div className=\"SelectedRoomHeaderConteiner\">\n            <SelectedRoomHeader\n                onPrevious={onPrevious}\n                handleNext={handleNext}\n            />\n            <section>\n                {availableRooms.map((room) => (\n                    \n                    <div className='RoomItem' key={room.id}>\n                        <SelectedRoomCart\n                            roomSelected={room}\n                            key={room.id}\n                            text={selectedRooms.some((selectedRoom) => selectedRoom.id === room.id) ? 'Deselect' : 'Select'}\n                            onSelectedRoom={() => handleRoomSelection(room)}\n                            currentImage={imageIndex}\n                        />\n                        {imageIndex}\n                        <button onClick={handleNextIndex}>next</button>\n                        <button onClick={handlePrevIndex}>prev</button>\n                    </div>\n                ))}\n            </section>\n        </div>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}