{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/components/BookingForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DateForm } from './DateForm';\nimport { StatBooking } from './StatBooking';\nimport { GuestForm } from './GuestForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookingForm = () => {\n  _s();\n  const dateToday = new Date().toISOString().split('T')[0];\n  const [date, setDate] = useState({\n    checkIn: dateToday,\n    checkOut: dateToday\n  });\n  const [inputClicked, setInputClicked] = useState(false);\n  const [reservationData, setReservationData] = useState({\n    date: date,\n    rooms: [{\n      adultCount: 3,\n      child: {\n        childCount: 0,\n        ages: []\n      }\n    }]\n  });\n  const handleInputClicked = () => {\n    setInputClicked(true);\n  };\n  const handleGuestChange = (roomIndex, field, value) => {\n    setReservationData(prev => {\n      const newRooms = [...prev.rooms];\n      if (field === 'adultCount') {\n        newRooms[roomIndex] = {\n          ...newRooms[roomIndex],\n          [field]: value\n        };\n      } else if (field === 'childCount') {\n        newRooms[roomIndex] = {\n          ...newRooms[roomIndex],\n          child: {\n            childCount: value,\n            ages: []\n          }\n        };\n      }\n      return {\n        ...prev,\n        rooms: newRooms\n      };\n    });\n  };\n  const handleAddRoom = () => {\n    const newRoom = {\n      adultCount: 1,\n      child: {\n        childCount: 0,\n        ages: []\n      }\n    };\n    setReservationData(prev => ({\n      ...prev,\n      rooms: [...prev.rooms, newRoom]\n    }));\n  };\n  const handleAgesChange = (roomIndex, ageIndex, value) => {\n    setReservationData(prev => {\n      const newRooms = [...prev.rooms];\n      const newAges = [...newRooms[roomIndex].child.ages];\n      newAges[ageIndex] = value;\n      newRooms[roomIndex] = {\n        ...newRooms[roomIndex],\n        child: {\n          ...newRooms[roomIndex].child,\n          ages: newAges\n        }\n      };\n      return {\n        ...prev,\n        rooms: newRooms\n      };\n    });\n  };\n  const handleDeleteRoom = index => {\n    setReservationData(prev => ({\n      ...prev,\n      rooms: prev.rooms.filter((_, i) => i !== index)\n    }));\n  };\n  // const addAges = (rooms: Room[]): Room[] => {\n  //     return rooms.map(room => {\n  //         if (room.child.count > 0 && !room.child.ages) {\n  //             return {\n  //                 ...room,\n  //                 child: {\n  //                     ...room.child,\n  //                     ages: []\n  //                 }\n  //             };\n  //         }\n  //         return room;\n  //     });\n  // };\n\n  console.log(reservationData);\n  const handleDateChange = (field, value) => {\n    setDate(prevDate => ({\n      ...prevDate,\n      [field]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BookingForm\",\n    children: [/*#__PURE__*/_jsxDEV(DateForm, {\n      date: date,\n      onDateChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StatBooking, {\n      rooms: reservationData.rooms,\n      handleInputClicked: handleInputClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), inputClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(GuestForm, {\n        rooms: reservationData.rooms,\n        onGuestChange: handleGuestChange,\n        onDelete: handleDeleteRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddRoom,\n        children: \"Add new Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setInputClicked(false),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(BookingForm, \"1d4XkJoGp2tXAHgEv59rQuuLqP4=\");\n_c = BookingForm;\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useState","DateForm","StatBooking","GuestForm","jsxDEV","_jsxDEV","BookingForm","_s","dateToday","Date","toISOString","split","date","setDate","checkIn","checkOut","inputClicked","setInputClicked","reservationData","setReservationData","rooms","adultCount","child","childCount","ages","handleInputClicked","handleGuestChange","roomIndex","field","value","prev","newRooms","handleAddRoom","newRoom","handleAgesChange","ageIndex","newAges","handleDeleteRoom","index","filter","_","i","console","log","handleDateChange","prevDate","className","children","onDateChange","fileName","_jsxFileName","lineNumber","columnNumber","onGuestChange","onDelete","onClick","_c","$RefreshReg$"],"sources":["/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/components/BookingForm.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { BookedDate } from '../interfaces/BookedDate'\nimport { DateForm } from './DateForm';\nimport { ResevationData } from '../interfaces/ReservationData';\nimport { StatBooking } from './StatBooking';\nimport { GuestForm } from './GuestForm';\nimport { Room } from '../interfaces/Room';\n\ntype field = 'adultCount' | 'childCount';\nexport const BookingForm: React.FC = () => {\n    const dateToday = new Date().toISOString().split('T')[0];\n    const [date, setDate] = useState<BookedDate>({ checkIn: dateToday, checkOut: dateToday });\n    const [inputClicked, setInputClicked] = useState<boolean>(false);\n    const [reservationData, setReservationData] = useState<ResevationData>({\n        date: date,\n        rooms: [\n            {\n                adultCount: 3,\n                child: { childCount: 0, ages: [] }\n            }\n        ]\n    });\n    const handleInputClicked = () => {\n        setInputClicked(true);\n    }\n    const handleGuestChange = (roomIndex: number, field: field, value: number) => {\n        setReservationData(prev => {\n            const newRooms = [...prev.rooms];\n            if (field === 'adultCount') {\n                newRooms[roomIndex] = {\n                    ...newRooms[roomIndex],\n                    [field]: value\n                };\n            } else if (field === 'childCount') {\n                newRooms[roomIndex] = {\n                    ...newRooms[roomIndex],\n                    child: { childCount: value, ages: [] }\n                }\n            }\n            return {\n                ...prev,\n                rooms: newRooms\n            };\n        });\n    };\n\n\n    const handleAddRoom = () => {\n        const newRoom: Room = {\n            adultCount: 1,\n            child: { childCount: 0, ages: [] }\n        };\n        setReservationData(prev => ({\n            ...prev,\n            rooms: [...prev.rooms, newRoom]\n        }));\n    };\n    const handleAgesChange = (roomIndex: number, ageIndex: number, value: number) => {\n        setReservationData(prev => {\n            const newRooms = [...prev.rooms];\n            const newAges = [...newRooms[roomIndex].child.ages];\n            newAges[ageIndex] = value;\n            newRooms[roomIndex] = {\n                ...newRooms[roomIndex],\n                child: {\n                    ...newRooms[roomIndex].child,\n                    ages: newAges\n                }\n            }\n            return {\n                ...prev,\n                rooms: newRooms\n            }\n\n        })\n    }\n    const handleDeleteRoom = (index: number) => {\n        setReservationData(prev => ({\n            ...prev,\n            rooms: prev.rooms.filter((_, i) => i !== index)\n        }))\n    }\n    // const addAges = (rooms: Room[]): Room[] => {\n    //     return rooms.map(room => {\n    //         if (room.child.count > 0 && !room.child.ages) {\n    //             return {\n    //                 ...room,\n    //                 child: {\n    //                     ...room.child,\n    //                     ages: []\n    //                 }\n    //             };\n    //         }\n    //         return room;\n    //     });\n    // };\n\n    console.log(reservationData);\n    const handleDateChange = (field: keyof BookedDate, value: string) => {\n        setDate(prevDate => ({\n            ...prevDate,\n            [field]: value\n        }))\n    }\n    return (\n        <div className='BookingForm'>\n            <DateForm\n                date={date}\n                onDateChange={handleDateChange}\n            />\n            <StatBooking\n                rooms={reservationData.rooms}\n                handleInputClicked={handleInputClicked}\n            />\n            {inputClicked && <div>\n                <GuestForm\n                    rooms={reservationData.rooms}\n                    onGuestChange={handleGuestChange} \n                    onDelete={handleDeleteRoom}\n                />\n\n                <button onClick={handleAddRoom}>Add new Room</button>\n                <button onClick={() => setInputClicked(false)}>Next</button>\n            </div>\n            }\n            \n        </div>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,QAAQ,QAAQ,YAAY;AAErC,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,SAAS,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxC,OAAO,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAa;IAAEc,OAAO,EAAEN,SAAS;IAAEO,QAAQ,EAAEP;EAAU,CAAC,CAAC;EACzF,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAU,KAAK,CAAC;EAChE,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAiB;IACnEY,IAAI,EAAEA,IAAI;IACVQ,KAAK,EAAE,CACH;MACIC,UAAU,EAAE,CAAC;MACbC,KAAK,EAAE;QAAEC,UAAU,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAG;IACrC,CAAC;EAET,CAAC,CAAC;EACF,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC7BR,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EACD,MAAMS,iBAAiB,GAAGA,CAACC,SAAiB,EAAEC,KAAY,EAAEC,KAAa,KAAK;IAC1EV,kBAAkB,CAACW,IAAI,IAAI;MACvB,MAAMC,QAAQ,GAAG,CAAC,GAAGD,IAAI,CAACV,KAAK,CAAC;MAChC,IAAIQ,KAAK,KAAK,YAAY,EAAE;QACxBG,QAAQ,CAACJ,SAAS,CAAC,GAAG;UAClB,GAAGI,QAAQ,CAACJ,SAAS,CAAC;UACtB,CAACC,KAAK,GAAGC;QACb,CAAC;MACL,CAAC,MAAM,IAAID,KAAK,KAAK,YAAY,EAAE;QAC/BG,QAAQ,CAACJ,SAAS,CAAC,GAAG;UAClB,GAAGI,QAAQ,CAACJ,SAAS,CAAC;UACtBL,KAAK,EAAE;YAAEC,UAAU,EAAEM,KAAK;YAAEL,IAAI,EAAE;UAAG;QACzC,CAAC;MACL;MACA,OAAO;QACH,GAAGM,IAAI;QACPV,KAAK,EAAEW;MACX,CAAC;IACL,CAAC,CAAC;EACN,CAAC;EAGD,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMC,OAAa,GAAG;MAClBZ,UAAU,EAAE,CAAC;MACbC,KAAK,EAAE;QAAEC,UAAU,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAG;IACrC,CAAC;IACDL,kBAAkB,CAACW,IAAI,KAAK;MACxB,GAAGA,IAAI;MACPV,KAAK,EAAE,CAAC,GAAGU,IAAI,CAACV,KAAK,EAAEa,OAAO;IAClC,CAAC,CAAC,CAAC;EACP,CAAC;EACD,MAAMC,gBAAgB,GAAGA,CAACP,SAAiB,EAAEQ,QAAgB,EAAEN,KAAa,KAAK;IAC7EV,kBAAkB,CAACW,IAAI,IAAI;MACvB,MAAMC,QAAQ,GAAG,CAAC,GAAGD,IAAI,CAACV,KAAK,CAAC;MAChC,MAAMgB,OAAO,GAAG,CAAC,GAAGL,QAAQ,CAACJ,SAAS,CAAC,CAACL,KAAK,CAACE,IAAI,CAAC;MACnDY,OAAO,CAACD,QAAQ,CAAC,GAAGN,KAAK;MACzBE,QAAQ,CAACJ,SAAS,CAAC,GAAG;QAClB,GAAGI,QAAQ,CAACJ,SAAS,CAAC;QACtBL,KAAK,EAAE;UACH,GAAGS,QAAQ,CAACJ,SAAS,CAAC,CAACL,KAAK;UAC5BE,IAAI,EAAEY;QACV;MACJ,CAAC;MACD,OAAO;QACH,GAAGN,IAAI;QACPV,KAAK,EAAEW;MACX,CAAC;IAEL,CAAC,CAAC;EACN,CAAC;EACD,MAAMM,gBAAgB,GAAIC,KAAa,IAAK;IACxCnB,kBAAkB,CAACW,IAAI,KAAK;MACxB,GAAGA,IAAI;MACPV,KAAK,EAAEU,IAAI,CAACV,KAAK,CAACmB,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK;IAClD,CAAC,CAAC,CAAC;EACP,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAI,OAAO,CAACC,GAAG,CAACzB,eAAe,CAAC;EAC5B,MAAM0B,gBAAgB,GAAGA,CAAChB,KAAuB,EAAEC,KAAa,KAAK;IACjEhB,OAAO,CAACgC,QAAQ,KAAK;MACjB,GAAGA,QAAQ;MACX,CAACjB,KAAK,GAAGC;IACb,CAAC,CAAC,CAAC;EACP,CAAC;EACD,oBACIxB,OAAA;IAAKyC,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxB1C,OAAA,CAACJ,QAAQ;MACLW,IAAI,EAAEA,IAAK;MACXoC,YAAY,EAAEJ;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACF/C,OAAA,CAACH,WAAW;MACRkB,KAAK,EAAEF,eAAe,CAACE,KAAM;MAC7BK,kBAAkB,EAAEA;IAAmB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,EACDpC,YAAY,iBAAIX,OAAA;MAAA0C,QAAA,gBACb1C,OAAA,CAACF,SAAS;QACNiB,KAAK,EAAEF,eAAe,CAACE,KAAM;QAC7BiC,aAAa,EAAE3B,iBAAkB;QACjC4B,QAAQ,EAAEjB;MAAiB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eAEF/C,OAAA;QAAQkD,OAAO,EAAEvB,aAAc;QAAAe,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrD/C,OAAA;QAAQkD,OAAO,EAAEA,CAAA,KAAMtC,eAAe,CAAC,KAAK,CAAE;QAAA8B,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGL,CAAC;AAEd,CAAC;AAAA7C,EAAA,CAvHYD,WAAqB;AAAAkD,EAAA,GAArBlD,WAAqB;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}