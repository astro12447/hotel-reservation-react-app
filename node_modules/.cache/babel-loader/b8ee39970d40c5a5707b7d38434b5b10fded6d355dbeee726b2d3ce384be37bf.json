{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/pages/BookingForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DateForm } from '../components/DateForm';\nimport { StatBooking } from '../components/StatBooking';\nimport { GuestForm } from '../components/RoomDataForm';\nimport \"../css/bookingForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookingForm = ({\n  onDataChange,\n  onNext\n}) => {\n  _s();\n  const today = new Date().toISOString().split('T')[0];\n  const [date, setDate] = useState({\n    checkIn: today,\n    checkOut: today\n  });\n  const [inputClicked, setInputClicked] = useState(false);\n  const inicialRooms = new Map();\n  inicialRooms.set(1, {\n    adultCount: 1,\n    child: {\n      childCount: 0,\n      ages: []\n    }\n  });\n  const inicialReservationData = {\n    date: {\n      checkIn: today,\n      checkOut: today\n    },\n    rooms: inicialRooms,\n    guest: {\n      name: '',\n      lastName: '',\n      email: '',\n      phone: ''\n    }\n  };\n  const [reservationData, setReservationData] = useState(inicialReservationData);\n  const hanledSubmit = () => {\n    onDataChange(reservationData);\n    onNext();\n  };\n  const addNewRoom = () => {\n    const newRoom = {\n      adultCount: 1,\n      child: {\n        childCount: 0,\n        ages: []\n      }\n    };\n    const newRooms = new Map(reservationData.rooms);\n    newRooms.set(reservationData.rooms.size + 1, newRoom);\n    setReservationData(prev => ({\n      ...prev,\n      rooms: newRooms\n    }));\n  };\n  console.log(reservationData.rooms);\n  const handleGuestCountChange = (index, field, value) => {\n    setReservationData(prev => {\n      const updateRooms = new Map(prev.rooms);\n      const updateRoom = updateRooms.get(index);\n      if (updateRoom) {\n        if (field === 'adultCount') {\n          updateRoom.adultCount = value;\n        } else if (field === 'childCount') {\n          updateRoom.child.childCount = value;\n        }\n        updateRooms.set(index, updateRoom);\n        return {\n          ...prev,\n          rooms: updateRooms\n        };\n      }\n      return prev;\n    });\n  };\n  const handleClickedInput = inputClick => {\n    setInputClicked(inputClick);\n  };\n  const handleChildAgeChange = (index, ages) => {\n    setReservationData(prev => {\n      const updateRooms = new Map(prev.rooms);\n      const roomToUpdate = updateRooms.get(index);\n      if (roomToUpdate) {\n        roomToUpdate.child.ages = ages;\n        updateRooms.set(index, roomToUpdate);\n        return {\n          ...prev,\n          rooms: updateRooms\n        };\n      }\n      return prev;\n    });\n  };\n  const handleDeleteRoom = index => {\n    setReservationData(prev => {\n      const updateRooms = new Map(reservationData.rooms);\n      updateRooms.delete(index);\n      return {\n        ...prev,\n        rooms: updateRooms\n      };\n    });\n  };\n  // const handleChildrenAgeChange = (roomId: number, childId: number, value: number) => {\n  //     setReservationData(prevData => {\n  //         const updatedRooms = new Map(prevData.rooms);\n  //         const room = updatedRooms.get(roomId);\n  //         if (room) {\n  //             const updatedChildAges = [...room.child.ages];\n  //             updatedChildAges[childId] = Number(value);\n  //             updatedRooms.set(roomId, { ...room, child: { ...room.child, ages: updatedChildAges } });\n  //         }\n  //         return { ...prevData, rooms: updatedRooms };\n  //     });\n  // };\n\n  const handleDateChange = (field, value) => {\n    setDate(prevDate => ({\n      ...prevDate,\n      [field]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BookingForm\",\n    children: [/*#__PURE__*/_jsxDEV(DateForm, {\n      date: date,\n      onDateChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StatBooking, {\n      rooms: reservationData.rooms,\n      onClickedInput: handleClickedInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: hanledSubmit,\n      children: \"booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), inputClicked && /*#__PURE__*/_jsxDEV(GuestForm, {\n      rooms: reservationData.rooms,\n      onHandleGuestCountChange: handleGuestCountChange,\n      onDeleteRoom: handleDeleteRoom,\n      onAddRoom: addNewRoom,\n      onSetClikedInput: handleClickedInput,\n      onChildAgeChange: handleChildAgeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(BookingForm, \"21Ov/pvSjL/QwGBsdxWbTH0vXWY=\");\n_c = BookingForm;\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useState","DateForm","StatBooking","GuestForm","jsxDEV","_jsxDEV","BookingForm","onDataChange","onNext","_s","today","Date","toISOString","split","date","setDate","checkIn","checkOut","inputClicked","setInputClicked","inicialRooms","Map","set","adultCount","child","childCount","ages","inicialReservationData","rooms","guest","name","lastName","email","phone","reservationData","setReservationData","hanledSubmit","addNewRoom","newRoom","newRooms","size","prev","console","log","handleGuestCountChange","index","field","value","updateRooms","updateRoom","get","handleClickedInput","inputClick","handleChildAgeChange","roomToUpdate","handleDeleteRoom","delete","handleDateChange","prevDate","className","children","onDateChange","fileName","_jsxFileName","lineNumber","columnNumber","onClickedInput","onClick","onHandleGuestCountChange","onDeleteRoom","onAddRoom","onSetClikedInput","onChildAgeChange","_c","$RefreshReg$"],"sources":["/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/pages/BookingForm.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { date } from '../interfaces/BookedDate'\nimport { DateForm } from '../components/DateForm';\nimport { StatBooking } from '../components/StatBooking';\nimport { GuestForm } from '../components/RoomDataForm';\nimport { Room } from '../interfaces/Room';\nimport { resevationData } from '../interfaces/ReservationData';\nimport \"../css/bookingForm.css\"\ntype field = \"adultCount\" | \"childCount\";\ninterface BookedFormProps {\n    onDataChange: (data: resevationData) => void;\n    onNext: () => void;\n}\nexport const BookingForm: React.FC<BookedFormProps> = ({ onDataChange, onNext }) => {\n    const today = new Date().toISOString().split('T')[0];\n    const [date, setDate] = useState<date>({ checkIn: today, checkOut: today });\n    const [inputClicked, setInputClicked] = useState<boolean>(false);\n    const inicialRooms = new Map<number, Room>();\n    inicialRooms.set(1, { adultCount: 1, child: { childCount: 0, ages: [] } });\n\n    const inicialReservationData: resevationData = {\n        date: { checkIn: today, checkOut: today },\n        rooms: inicialRooms,\n        guest: { name: '', lastName: '', email: '', phone: '' }\n    }\n    const [reservationData, setReservationData] = useState<resevationData>(inicialReservationData);\n    const hanledSubmit = () => {\n        onDataChange(reservationData);\n        onNext();\n    }\n\n    const addNewRoom = () => {\n        const newRoom: Room = {\n            adultCount: 1,\n            child: { childCount: 0, ages: [] }\n        }\n        const newRooms = new Map(reservationData.rooms);\n        newRooms.set(reservationData.rooms.size + 1, newRoom);\n        setReservationData(prev => ({\n            ...prev,\n            rooms: newRooms\n        }))\n    }\n    console.log(reservationData.rooms);\n    const handleGuestCountChange = (index: number, field: field, value: number) => {\n        setReservationData(prev => {\n            const updateRooms = new Map(prev.rooms);\n            const updateRoom = updateRooms.get(index);\n            if (updateRoom) {\n                if (field === 'adultCount') {\n                    updateRoom.adultCount = value;\n                } else if (field === 'childCount') {\n                    updateRoom.child.childCount = value;\n                }\n                updateRooms.set(index, updateRoom);\n                return {\n                    ...prev,\n                    rooms: updateRooms\n                }\n\n            }\n            return prev\n        });\n    }\n    const handleClickedInput = (inputClick: boolean) => {\n        setInputClicked(inputClick);\n    }\n    const handleChildAgeChange = (index: number, ages: number[]) => {\n        setReservationData(prev => {\n            const updateRooms = new Map(prev.rooms);\n            const roomToUpdate = updateRooms.get(index);\n            if (roomToUpdate) {\n                roomToUpdate.child.ages = ages;\n                updateRooms.set(index, roomToUpdate);\n                return {\n                    ...prev,\n                    rooms: updateRooms\n                }\n            }\n            return prev\n        })\n    }\n\n    const handleDeleteRoom = (index: number) => {\n        setReservationData(prev => {\n            const updateRooms = new Map(reservationData.rooms);\n            updateRooms.delete(index);\n            return {\n                ...prev,\n                rooms: updateRooms\n            }\n        })\n    }\n    // const handleChildrenAgeChange = (roomId: number, childId: number, value: number) => {\n    //     setReservationData(prevData => {\n    //         const updatedRooms = new Map(prevData.rooms);\n    //         const room = updatedRooms.get(roomId);\n    //         if (room) {\n    //             const updatedChildAges = [...room.child.ages];\n    //             updatedChildAges[childId] = Number(value);\n    //             updatedRooms.set(roomId, { ...room, child: { ...room.child, ages: updatedChildAges } });\n    //         }\n    //         return { ...prevData, rooms: updatedRooms };\n    //     });\n    // };\n\n    const handleDateChange = (field: keyof date, value: string) => {\n        setDate(prevDate => ({\n            ...prevDate,\n            [field]: value\n        }))\n    }\n    return (\n        <div className='BookingForm'>\n            <DateForm\n                date={date}\n                onDateChange={handleDateChange}\n            />\n            <StatBooking\n                rooms={reservationData.rooms}\n                onClickedInput={handleClickedInput}\n            />\n            <button\n                onClick={hanledSubmit}\n            >\n                booking\n            </button>\n\n            {inputClicked &&\n                <GuestForm\n                    rooms={reservationData.rooms}\n                    onHandleGuestCountChange={handleGuestCountChange}\n                    onDeleteRoom={handleDeleteRoom}\n                    onAddRoom={addNewRoom}\n                    onSetClikedInput={handleClickedInput}\n                    onChildAgeChange={handleChildAgeChange}\n                />\n            }\n\n        </div>\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}