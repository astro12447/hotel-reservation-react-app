{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/components/RoomDataForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { AgesForm } from './AgesForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GuestForm = ({\n  onSendRoomData\n}) => {\n  _s();\n  const initialRooms = new Map();\n  initialRooms.set(initialRooms.size + 1, {\n    adultCount: 1,\n    child: {\n      childCount: 0,\n      ages: []\n    }\n  });\n  const [rooms, setRooms] = useState(initialRooms);\n  const handleAddRoom = () => {\n    const newRoom = {\n      adultCount: 1,\n      child: {\n        childCount: 0,\n        ages: []\n      }\n    };\n    setRooms(prevRooms => {\n      const newRooms = new Map(prevRooms);\n      newRooms.set(prevRooms.size + 1, newRoom);\n      return newRooms;\n    });\n  };\n  useEffect(() => {\n    onSendRoomData(rooms);\n  }, [rooms, onSendRoomData]);\n  console.log(rooms, 'From Rooms');\n  const handleAgesChange = (id, newAges) => {\n    setRooms(prevRooms => {\n      const newRooms = new Map(prevRooms);\n      const room = newRooms.get(id);\n      if (room) {\n        newRooms.set(id, {\n          ...room,\n          child: {\n            ...room.child,\n            ages: newAges\n          }\n        });\n      }\n      return newRooms;\n    });\n  };\n  const handleDeleteRoom = id => {\n    setRooms(prevRooms => {\n      const newRooms = new Map(prevRooms);\n      newRooms.delete(id);\n      return newRooms;\n    });\n  };\n  const handleRoomGuestChange = (id, field, value) => {\n    setRooms(prevRooms => {\n      const newRooms = new Map(prevRooms);\n      const room = newRooms.get(id);\n      if (room) {\n        if (field === \"adultCount\") {\n          newRooms.set(id, {\n            ...room,\n            adultCount: value\n          });\n        } else if (field === \"childCount\") {\n          newRooms.set(id, {\n            ...room,\n            child: {\n              ...room.child,\n              childCount: value\n            }\n          });\n        }\n      }\n      return newRooms;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"GuestForm\",\n    children: [Array.from(rooms.entries()).map(([index, room]) => /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: room.adultCount,\n        onChange: e => handleRoomGuestChange(index, 'adultCount', Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: room.child.childCount,\n        onChange: e => handleRoomGuestChange(index, 'childCount', Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), room.child.childCount > 0 && /*#__PURE__*/_jsxDEV(AgesForm, {\n        childCount: room.child.childCount,\n        onChildrenAges: newChildAges => handleAgesChange(index, newChildAges)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }, this), index > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleDeleteRoom(index + 1),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddRoom,\n      children: \"addRoom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(GuestForm, \"zDEju7+1S8qhOhPja1fjFEmuza8=\");\n_c = GuestForm;\nvar _c;\n$RefreshReg$(_c, \"GuestForm\");","map":{"version":3,"names":["React","useEffect","useState","AgesForm","jsxDEV","_jsxDEV","GuestForm","onSendRoomData","_s","initialRooms","Map","set","size","adultCount","child","childCount","ages","rooms","setRooms","handleAddRoom","newRoom","prevRooms","newRooms","console","log","handleAgesChange","id","newAges","room","get","handleDeleteRoom","delete","handleRoomGuestChange","field","value","className","children","Array","from","entries","map","index","type","onChange","e","Number","target","fileName","_jsxFileName","lineNumber","columnNumber","onChildrenAges","newChildAges","onClick","_c","$RefreshReg$"],"sources":["/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/components/RoomDataForm.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { room } from '../interfaces/Room';\nimport { AgesForm } from './AgesForm';\n\ntype Field = 'adultCount' | 'childCount';\n\ninterface GuestFormProps {\n    onSendRoomData: (rooms: Map<number, room>) => void;\n}\n\nexport const GuestForm: React.FC<GuestFormProps> = ({ onSendRoomData }) => {\n    const initialRooms = new Map<number, room>();\n    initialRooms.set(initialRooms.size + 1 , { adultCount: 1, child: { childCount: 0, ages: [] } });\n    const [rooms, setRooms] = useState<Map<number, room>>(initialRooms);\n\n    const handleAddRoom = () => {\n        const newRoom: room = {\n            adultCount: 1,\n\n            child: {\n                childCount: 0,\n                ages: []\n            }\n        };\n        setRooms(prevRooms => {\n            const newRooms = new Map(prevRooms);\n            newRooms.set( prevRooms.size + 1 , newRoom);\n            return newRooms\n        })\n    };\n\n    useEffect(() => {\n        onSendRoomData(rooms);\n    }, [rooms, onSendRoomData]);\n\n    console.log(rooms, 'From Rooms');\n\n    const handleAgesChange = (id: number, newAges: number[]) => {\n        setRooms((prevRooms) => {\n            const newRooms = new Map(prevRooms);\n            const room = newRooms.get(id);\n            if (room) {\n                newRooms.set(id, {\n                    ...room,\n                    child: {\n                        ...room.child,\n                        ages: newAges\n                    }\n                });\n            }\n            return newRooms;\n        });\n    };\n    const handleDeleteRoom = (id: number) => {\n        setRooms(prevRooms => {\n            const newRooms = new Map(prevRooms);\n            newRooms.delete(id);\n            return newRooms\n        });\n    };\n\n    const handleRoomGuestChange = (id: number, field: Field, value: number) => {\n        setRooms(prevRooms => {\n            const newRooms = new Map(prevRooms);\n            const room = newRooms.get(id)\n            if (room) {\n                if (field === \"adultCount\") {\n                    newRooms.set(id, {\n                        ...room,\n                        adultCount: value\n                    })\n                } else if (field === \"childCount\") {\n                    newRooms.set(id, {\n                        ...room,\n                        child: {\n                            ...room.child,\n                            childCount: value\n                        }\n                    })\n                }\n\n            }\n            return newRooms;\n        });\n    };\n\n    return (\n        <div className='GuestForm'>\n            {Array.from(rooms.entries()).map(([index, room]) => (\n                <form key={index}>\n                    <input\n                        type=\"number\"\n                        value={room.adultCount}\n                        onChange={(e) => handleRoomGuestChange(index, 'adultCount', Number(e.target.value))}\n                    />\n                    <input\n                        type=\"number\"\n                        value={room.child.childCount}\n                        onChange={(e) => handleRoomGuestChange(index, 'childCount', Number(e.target.value))}\n                    />\n                    {room.child.childCount > 0 && (\n                        <AgesForm\n                            childCount={room.child.childCount}\n                            onChildrenAges={(newChildAges) => handleAgesChange(index, newChildAges)}\n                        />\n                    )}\n                    {index > 1 && (\n                        <button type='button' onClick={() => handleDeleteRoom(index + 1)}>Delete</button>\n                    )}\n                </form>\n            ))}\n            <button onClick={handleAddRoom}>addRoom</button>\n        </div>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}