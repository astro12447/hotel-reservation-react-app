{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/components/SelectAges.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n// Ese Componente deberia recibir un array de edades de los Guest\n// Despues de editarlar el array debe ser enviado a su componente padre, cada ves que se edite la edad en \n// cualquier habitacion se deberia volver a enviar los datos al componente padre.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectAges = ({\n  ages,\n  onAges\n}) => {\n  _s();\n  const [childAges, setChildAges] = useState(Array.from({\n    length: ages.length\n  }));\n  useEffect(() => {\n    setChildAges(Array.from({\n      length: ages.length\n    }));\n  }, [ages.length]);\n  const handleAgeChange = (index, value) => {\n    setChildAges(prev => {\n      const updateAges = [...prev];\n      updateAges[index] = value;\n      return updateAges;\n    });\n    onAges(childAges);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: childAges.map((value, index) => /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"Ages\",\n      id: \"Ages\",\n      value: value,\n      onChange: e => handleAgeChange(index, Number(e.target.value)),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: [\"Select child \", index, \" Ages\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), [...Array(18)].map((_, option) => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: index\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this)), value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this)\n  // <div className='SelectAges'>\n  //     {room.child.childCount > 0 && (\n  //         Array.from({ length: room.child.childCount }).map((_, index) => (\n  //             <div key={index} className='ChildAgeItem'>\n  //                 <select\n  //                     name=\"agesChild\"\n  //                     id=\"agesChild\"\n  //                     key={index}\n  //                     value={room.child.ages[index]}\n  //                     onChange={(e) => onAgeInputChange(index, Number(e.target.value))}\n  //                 >\n  //                     <option value=\"\"> Select child {index + 1} Age</option>\n  //                     {[...Array(18)].map((_, index) => (\n  //                         <option key={index} >{index}</option>\n  //                     ))}\n  //                 </select>\n  //             </div>\n  //         ))\n  //     )}\n  // </div>\n  ;\n};\n_s(SelectAges, \"YZeXnSFf+445nXa06of1UILiikw=\");\n_c = SelectAges;\nvar _c;\n$RefreshReg$(_c, \"SelectAges\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SelectAges","ages","onAges","_s","childAges","setChildAges","Array","from","length","handleAgeChange","index","value","prev","updateAges","children","map","name","id","onChange","e","Number","target","fileName","_jsxFileName","lineNumber","columnNumber","_","option","_c","$RefreshReg$"],"sources":["/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/components/SelectAges.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Room } from '../interfaces/Room'\n// Ese Componente deberia recibir un array de edades de los Guest\n// Despues de editarlar el array debe ser enviado a su componente padre, cada ves que se edite la edad en \n// cualquier habitacion se deberia volver a enviar los datos al componente padre.\ninterface SelectAgesProps {\n    ages: number[];\n    onAges: (dataAges: number[]) => void;\n}\nexport const SelectAges: React.FC<SelectAgesProps> = ({ ages, onAges }) => {\n    const [childAges, setChildAges] = useState<number[]>(Array.from({ length: ages.length }));\n    useEffect(() => {\n        setChildAges(Array.from({ length: ages.length }));\n    }, [ages.length])\n\n    const handleAgeChange = (index: number, value: number) => {\n        setChildAges(prev => {\n            const updateAges = [...prev];\n            updateAges[index] = value;\n            return updateAges\n        })\n\n        onAges(childAges);\n    }\n    return (\n        <section>\n            {childAges.map((value, index) => (\n                <select\n                    name=\"Ages\"\n                    id=\"Ages\"\n                    value={value}\n                    onChange={(e) => handleAgeChange(index, Number(e.target.value))}\n                >\n                    <option value=\"\">Select child {index} Ages</option>\n                    {[...Array(18)].map((_, option) => (\n                        <option\n                            key={option}\n                        >\n                            {index}\n                        </option>\n                    ))}\n                    {value}\n                </select>\n            ))}\n        </section>\n        // <div className='SelectAges'>\n        //     {room.child.childCount > 0 && (\n        //         Array.from({ length: room.child.childCount }).map((_, index) => (\n        //             <div key={index} className='ChildAgeItem'>\n        //                 <select\n        //                     name=\"agesChild\"\n        //                     id=\"agesChild\"\n        //                     key={index}\n        //                     value={room.child.ages[index]}\n        //                     onChange={(e) => onAgeInputChange(index, Number(e.target.value))}\n        //                 >\n        //                     <option value=\"\"> Select child {index + 1} Age</option>\n        //                     {[...Array(18)].map((_, index) => (\n        //                         <option key={index} >{index}</option>\n        //                     ))}\n        //                 </select>\n        //             </div>\n        //         ))\n        //     )}\n        // </div>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAElD;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,OAAO,MAAMC,UAAqC,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAWS,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEP,IAAI,CAACO;EAAO,CAAC,CAAC,CAAC;EACzFZ,SAAS,CAAC,MAAM;IACZS,YAAY,CAACC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEP,IAAI,CAACO;IAAO,CAAC,CAAC,CAAC;EACrD,CAAC,EAAE,CAACP,IAAI,CAACO,MAAM,CAAC,CAAC;EAEjB,MAAMC,eAAe,GAAGA,CAACC,KAAa,EAAEC,KAAa,KAAK;IACtDN,YAAY,CAACO,IAAI,IAAI;MACjB,MAAMC,UAAU,GAAG,CAAC,GAAGD,IAAI,CAAC;MAC5BC,UAAU,CAACH,KAAK,CAAC,GAAGC,KAAK;MACzB,OAAOE,UAAU;IACrB,CAAC,CAAC;IAEFX,MAAM,CAACE,SAAS,CAAC;EACrB,CAAC;EACD,oBACIL,OAAA;IAAAe,QAAA,EACKV,SAAS,CAACW,GAAG,CAAC,CAACJ,KAAK,EAAED,KAAK,kBACxBX,OAAA;MACIiB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,MAAM;MACTN,KAAK,EAAEA,KAAM;MACbO,QAAQ,EAAGC,CAAC,IAAKV,eAAe,CAACC,KAAK,EAAEU,MAAM,CAACD,CAAC,CAACE,MAAM,CAACV,KAAK,CAAC,CAAE;MAAAG,QAAA,gBAEhEf,OAAA;QAAQY,KAAK,EAAC,EAAE;QAAAG,QAAA,GAAC,eAAa,EAACJ,KAAK,EAAC,OAAK;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAClD,CAAC,GAAGnB,KAAK,CAAC,EAAE,CAAC,CAAC,CAACS,GAAG,CAAC,CAACW,CAAC,EAAEC,MAAM,kBAC1B5B,OAAA;QAAAe,QAAA,EAGKJ;MAAK,GAFDiB,MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGP,CACX,CAAC,EACDd,KAAK;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG;EACT;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAER,CAAC;AAAAtB,EAAA,CAzDYH,UAAqC;AAAA4B,EAAA,GAArC5B,UAAqC;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}