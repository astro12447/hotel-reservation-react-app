{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/pages/SelectedRooms.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"../css/selectedRooms.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectedRooms = ({\n  data,\n  onSelectedRoomsChange,\n  totalGuest,\n  onNext,\n  onPrevious\n}) => {\n  _s();\n  const availableRooms = data.filter(room => !room.booked);\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const handleRoomSelection = room => {\n    const isSelected = selectedRooms.some(selectedRoom => selectedRoom.id === room.id);\n    if (isSelected) {\n      const updateRooms = selectedRooms.filter(selectedRoom => selectedRoom.id !== room.id);\n      setSelectedRooms(updateRooms);\n    } else {\n      const totalGuestSelected = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n      const newtotalGuest = totalGuestSelected + room.maxGuest;\n      if (newtotalGuest <= totalGuest) {\n        setSelectedRooms([...selectedRooms, room]);\n      } else {\n        alert('Cannot select more rooms than the total number of guests.');\n      }\n    }\n  };\n  const handleNext = () => {\n    const totalSelectedGuests = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n    if (totalSelectedGuests >= totalGuest) {\n      onNext();\n    } else {\n      alert('You must select enough rooms to accommodate all guests.');\n    }\n  };\n  useEffect(() => {\n    onSelectedRoomsChange(selectedRooms);\n  }, [selectedRooms, onSelectedRoomsChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SelectedRoomsConteiner\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SelectedRooms flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TitleHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onPrevious(),\n          className: \"PreviousBotton\",\n          children: \"Prevuis Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Select Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), availableRooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SelectedRoomsItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SelectedImage\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: room.src,\n            alt: room.category,\n            style: {\n              minWidth: \"40rem\",\n              height: \"20rem\",\n              objectFit: \"cover\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SelectedRoomsDescription\",\n          style: {\n            width: \"30rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: room.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", room.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", room.price, \"$\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Max Guests: \", room.maxGuest]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRoomSelection(room),\n            className: \"RoomSelectorBotton\",\n            children: selectedRooms.some(selectedRoom => selectedRoom.id === room.id) ? 'Deselect' : 'Select'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, room.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BottonNext\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectedRooms, \"sCuR4gE5S2Pp+mJ6KfhtReAef3Q=\");\n_c = SelectedRooms;\nvar _c;\n$RefreshReg$(_c, \"SelectedRooms\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SelectedRooms","data","onSelectedRoomsChange","totalGuest","onNext","onPrevious","_s","availableRooms","filter","room","booked","selectedRooms","setSelectedRooms","handleRoomSelection","isSelected","some","selectedRoom","id","updateRooms","totalGuestSelected","reduce","total","maxGuest","newtotalGuest","alert","handleNext","totalSelectedGuests","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","map","src","alt","category","minWidth","height","objectFit","width","description","price","_c","$RefreshReg$"],"sources":["/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/pages/SelectedRooms.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Data } from '../interfaces/Data'\nimport \"../css/selectedRooms.css\";\ninterface SelectedRoomsProps {\n    data: Data[];\n    onSelectedRoomsChange: (selectedRooms: Data[]) => void;\n    totalGuest: number;\n    onNext: () => void;\n    onPrevious: () => void;\n}\nexport const SelectedRooms: React.FC<SelectedRoomsProps> = ({ data, onSelectedRoomsChange, totalGuest, onNext, onPrevious }) => {\n    const availableRooms = data.filter(room => !room.booked);\n\n    const [selectedRooms, setSelectedRooms] = useState<Data[]>([]);\n\n    const handleRoomSelection = (room: Data) => {\n        const isSelected = selectedRooms.some((selectedRoom) => selectedRoom.id === room.id);\n        if (isSelected) {\n            const updateRooms = selectedRooms.filter((selectedRoom) => selectedRoom.id !== room.id);\n            setSelectedRooms(updateRooms);\n        } else {\n            const totalGuestSelected = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n            const newtotalGuest = (totalGuestSelected + room.maxGuest);\n            if (newtotalGuest <= totalGuest) {\n                setSelectedRooms([...selectedRooms, room]);\n            } else {\n                alert('Cannot select more rooms than the total number of guests.');\n            }\n        }\n\n    }\n    const handleNext = () => {\n        const totalSelectedGuests = selectedRooms.reduce((total, selectedRoom) => total + selectedRoom.maxGuest, 0);\n        if (totalSelectedGuests >= totalGuest) {\n            onNext();\n        } else {\n            alert('You must select enough rooms to accommodate all guests.');\n        }\n    }\n    useEffect(() => {\n        onSelectedRoomsChange(selectedRooms)\n    }, [selectedRooms, onSelectedRoomsChange])\n\n    return (\n\n        <div className=\"SelectedRoomsConteiner\">\n            <div className='SelectedRooms flex'>\n                <div className='TitleHeader'>\n                    <button onClick={() => onPrevious()} className='PreviousBotton'>Prevuis Page</button>\n                    <h1 style={{ textAlign: \"center\" }}>Select Rooms</h1>\n                </div>\n                {availableRooms.map((room) => (\n                    <div key={room.id} className='SelectedRoomsItem'>\n                        <div className='SelectedImage' >\n                            <img src={room.src} alt={room.category}\n                                style={{ minWidth: \"40rem\", height: \"20rem\", objectFit: \"cover\" }}\n                            />\n                        </div>\n                        <div className='SelectedRoomsDescription'\n                            style={{ width: \"30rem\" }}>\n                            <h2>{room.category}</h2>\n                            <p>Description: {room.description}</p>\n                            <p>Price: {room.price}$</p>\n                            <p>Max Guests: {room.maxGuest}</p>\n                            <button onClick={() => handleRoomSelection(room)}\n                                className='RoomSelectorBotton'>\n                                {selectedRooms.some((selectedRoom) => selectedRoom.id === room.id) ? 'Deselect' : 'Select'}\n                            </button>\n                        </div>\n\n                    </div>\n                ))}\n            </div>\n            <div className='BottonNext'>\n                <button onClick={handleNext}\n                >Next\n                </button>\n            </div>\n        </div>\n\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}