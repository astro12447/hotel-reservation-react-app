{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/components/AgeCartComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useBookingContext } from './ContexApplication';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AgeCartComponent = ({\n  childrenCount,\n  onAgeChange,\n  roomIndex\n}) => {\n  _s();\n  const [localAges, setLocalAges] = useState(Array(childrenCount).fill(\"no selected\"));\n  const {\n    bookingData,\n    setBookingData\n  } = useBookingContext();\n  useEffect(() => {\n    if (childrenCount > localAges.length) {\n      const newAges = [...localAges, ...Array(childrenCount - localAges.length).fill(\"no age selected\")];\n      setLocalAges(newAges);\n    } else if (childrenCount < localAges.length) {\n      const newAges = localAges.slice(0, childrenCount);\n      setLocalAges(newAges);\n    }\n  }, [childrenCount]);\n  useEffect(() => {\n    // Actualizar bookingData con los nuevos valores de localAges\n    const roomsUpdate = new Map(bookingData.rooms);\n    const roomToUpdate = roomsUpdate.get(roomIndex);\n    if (roomToUpdate) {\n      roomToUpdate.child.ages = [...localAges];\n      setBookingData({\n        ...bookingData,\n        rooms: roomsUpdate\n      });\n    }\n  }, [localAges, roomIndex]);\n  const handleAgeChange = (index, value) => {\n    const newAges = [...localAges];\n    newAges[index] = value;\n    setLocalAges(newAges);\n    onAgeChange(index, value);\n  };\n  console.log(localAges);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AgeCartComponent\",\n    children: localAges.map((age, index) => /*#__PURE__*/_jsxDEV(\"select\", {\n      value: age,\n      onChange: e => handleAgeChange(index, e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"no selected\",\n        children: [\"Select child \", index + 1, \" Age\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), [...Array(18)].map((value, optionIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: value,\n        children: [optionIndex, \" years old\"]\n      }, optionIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(AgeCartComponent, \"+UlKeccGFS4p92Up7o5No21rtf4=\", false, function () {\n  return [useBookingContext];\n});\n_c = AgeCartComponent;\nvar _c;\n$RefreshReg$(_c, \"AgeCartComponent\");","map":{"version":3,"names":["React","useEffect","useState","useBookingContext","jsxDEV","_jsxDEV","AgeCartComponent","childrenCount","onAgeChange","roomIndex","_s","localAges","setLocalAges","Array","fill","bookingData","setBookingData","length","newAges","slice","roomsUpdate","Map","rooms","roomToUpdate","get","child","ages","handleAgeChange","index","value","console","log","className","children","map","age","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","optionIndex","_c","$RefreshReg$"],"sources":["/Users/ismaelnvo/Desktop/hotelReservation/hotel-reservation/src/components/AgeCartComponent.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useBookingContext } from './ContexApplication';\ninterface AgeCartComponentProps {\n    childrenCount: number;\n    roomIndex:number;\n    onAgeChange:(childAgeIndex:number, value:string)=>void;\n}\n\nexport const AgeCartComponent: React.FC<AgeCartComponentProps> = ({ childrenCount, onAgeChange, roomIndex}) => {\n    const [localAges, setLocalAges] = useState<string[]>(Array(childrenCount).fill(\"no selected\"));\n    const {bookingData,setBookingData} = useBookingContext();\n\n    \n    useEffect(() => {\n        if(childrenCount > localAges.length){\n            const newAges = [...localAges, ...Array(childrenCount - localAges.length).fill(\"no age selected\")];\n            setLocalAges(newAges)\n        }else if(childrenCount < localAges.length){\n            const newAges = localAges.slice(0, childrenCount);\n            setLocalAges(newAges); \n        }\n    }, [childrenCount]);\n\n    useEffect(() => {\n        // Actualizar bookingData con los nuevos valores de localAges\n        const roomsUpdate = new Map(bookingData.rooms);\n        const roomToUpdate = roomsUpdate.get(roomIndex);\n        if (roomToUpdate) {\n            roomToUpdate.child.ages = [...localAges];\n            setBookingData({\n                ...bookingData,\n                rooms: roomsUpdate\n            });\n        }\n    }, [localAges, roomIndex]);\n    \n    \n    const handleAgeChange = (index: number, value: string) => {\n        const newAges = [...localAges];\n        newAges[index] = value;\n        setLocalAges(newAges);\n        onAgeChange(index, value);\n    };\n    console.log(localAges);\n    return (\n        <div className='AgeCartComponent'>\n            {localAges.map((age, index) => (\n                <select \n                    key={index}\n                    value={age}\n                    onChange={(e) => handleAgeChange(index, e.target.value)}\n                >\n                    <option value=\"no selected\">Select child {index + 1} Age</option>\n                    {[...Array(18)].map((value, optionIndex) => (\n                        <option key={optionIndex} value={value}>\n                           {optionIndex} years old\n                        </option>\n                    ))}\n                </select>\n            ))}\n        </div>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}